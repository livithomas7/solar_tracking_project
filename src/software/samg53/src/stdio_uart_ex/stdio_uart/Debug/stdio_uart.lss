
stdio_uart.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001980  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000084c  20000000  00401980  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000088  2000084c  004021cc  0002084c  2**2
                  ALLOC
  3 .stack        00003004  200008d4  00402254  0002084c  2**0
                  ALLOC
  4 .ARM.attributes 0000002e  00000000  00000000  0002084c  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002087a  2**0
                  CONTENTS, READONLY
  6 .debug_info   0000d1f6  00000000  00000000  000208d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002213  00000000  00000000  0002dac9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000023c4  00000000  00000000  0002fcdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000668  00000000  00000000  000320a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000005b8  00000000  00000000  00032708  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0000ffde  00000000  00000000  00032cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00009b0d  00000000  00000000  00042c9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00040cf7  00000000  00000000  0004c7ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001498  00000000  00000000  0008d4a4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 38 00 20 3d 04 40 00 39 04 40 00 39 04 40 00     .8. =.@.9.@.9.@.
  400010:	39 04 40 00 39 04 40 00 39 04 40 00 00 00 00 00     9.@.9.@.9.@.....
	...
  40002c:	39 04 40 00 39 04 40 00 00 00 00 00 39 04 40 00     9.@.9.@.....9.@.
  40003c:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  40004c:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  40005c:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  40006c:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  40007c:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  40008c:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  40009c:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  4000ac:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  4000bc:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  4000cc:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  4000dc:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.
  4000ec:	39 04 40 00 39 04 40 00 39 04 40 00 39 04 40 00     9.@.9.@.9.@.9.@.

004000fc <__do_global_dtors_aux>:
  4000fc:	b510      	push	{r4, lr}
  4000fe:	4c05      	ldr	r4, [pc, #20]	; (400114 <__do_global_dtors_aux+0x18>)
  400100:	7823      	ldrb	r3, [r4, #0]
  400102:	b933      	cbnz	r3, 400112 <__do_global_dtors_aux+0x16>
  400104:	4b04      	ldr	r3, [pc, #16]	; (400118 <__do_global_dtors_aux+0x1c>)
  400106:	b113      	cbz	r3, 40010e <__do_global_dtors_aux+0x12>
  400108:	4804      	ldr	r0, [pc, #16]	; (40011c <__do_global_dtors_aux+0x20>)
  40010a:	f3af 8000 	nop.w
  40010e:	2301      	movs	r3, #1
  400110:	7023      	strb	r3, [r4, #0]
  400112:	bd10      	pop	{r4, pc}
  400114:	2000084c 	.word	0x2000084c
  400118:	00000000 	.word	0x00000000
  40011c:	00401980 	.word	0x00401980

00400120 <frame_dummy>:
  400120:	4b0c      	ldr	r3, [pc, #48]	; (400154 <frame_dummy+0x34>)
  400122:	b143      	cbz	r3, 400136 <frame_dummy+0x16>
  400124:	480c      	ldr	r0, [pc, #48]	; (400158 <frame_dummy+0x38>)
  400126:	490d      	ldr	r1, [pc, #52]	; (40015c <frame_dummy+0x3c>)
  400128:	b510      	push	{r4, lr}
  40012a:	f3af 8000 	nop.w
  40012e:	480c      	ldr	r0, [pc, #48]	; (400160 <frame_dummy+0x40>)
  400130:	6803      	ldr	r3, [r0, #0]
  400132:	b923      	cbnz	r3, 40013e <frame_dummy+0x1e>
  400134:	bd10      	pop	{r4, pc}
  400136:	480a      	ldr	r0, [pc, #40]	; (400160 <frame_dummy+0x40>)
  400138:	6803      	ldr	r3, [r0, #0]
  40013a:	b933      	cbnz	r3, 40014a <frame_dummy+0x2a>
  40013c:	4770      	bx	lr
  40013e:	4b09      	ldr	r3, [pc, #36]	; (400164 <frame_dummy+0x44>)
  400140:	2b00      	cmp	r3, #0
  400142:	d0f7      	beq.n	400134 <frame_dummy+0x14>
  400144:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400148:	4718      	bx	r3
  40014a:	4b06      	ldr	r3, [pc, #24]	; (400164 <frame_dummy+0x44>)
  40014c:	2b00      	cmp	r3, #0
  40014e:	d0f5      	beq.n	40013c <frame_dummy+0x1c>
  400150:	4718      	bx	r3
  400152:	bf00      	nop
  400154:	00000000 	.word	0x00000000
  400158:	00401980 	.word	0x00401980
  40015c:	20000850 	.word	0x20000850
  400160:	00401980 	.word	0x00401980
  400164:	00000000 	.word	0x00000000

00400168 <_read>:
  400168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40016c:	b980      	cbnz	r0, 400190 <_read+0x28>
  40016e:	460c      	mov	r4, r1
  400170:	4690      	mov	r8, r2
  400172:	2a00      	cmp	r2, #0
  400174:	dd0f      	ble.n	400196 <_read+0x2e>
  400176:	188f      	adds	r7, r1, r2
  400178:	4e08      	ldr	r6, [pc, #32]	; (40019c <_read+0x34>)
  40017a:	4d09      	ldr	r5, [pc, #36]	; (4001a0 <_read+0x38>)
  40017c:	6830      	ldr	r0, [r6, #0]
  40017e:	4621      	mov	r1, r4
  400180:	682b      	ldr	r3, [r5, #0]
  400182:	4798      	blx	r3
  400184:	3401      	adds	r4, #1
  400186:	42bc      	cmp	r4, r7
  400188:	d1f8      	bne.n	40017c <_read+0x14>
  40018a:	4640      	mov	r0, r8
  40018c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400190:	f04f 38ff 	mov.w	r8, #4294967295
  400194:	e7f9      	b.n	40018a <_read+0x22>
  400196:	4680      	mov	r8, r0
  400198:	e7f7      	b.n	40018a <_read+0x22>
  40019a:	bf00      	nop
  40019c:	200008a8 	.word	0x200008a8
  4001a0:	200008a0 	.word	0x200008a0

004001a4 <usart_write>:
  4001a4:	6943      	ldr	r3, [r0, #20]
  4001a6:	f013 0f02 	tst.w	r3, #2
  4001aa:	bf1d      	ittte	ne
  4001ac:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  4001b0:	61c1      	strne	r1, [r0, #28]
  4001b2:	2000      	movne	r0, #0
  4001b4:	2001      	moveq	r0, #1
  4001b6:	4770      	bx	lr

004001b8 <usart_read>:
  4001b8:	6943      	ldr	r3, [r0, #20]
  4001ba:	f013 0f01 	tst.w	r3, #1
  4001be:	d005      	beq.n	4001cc <usart_read+0x14>
  4001c0:	6983      	ldr	r3, [r0, #24]
  4001c2:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4001c6:	600b      	str	r3, [r1, #0]
  4001c8:	2000      	movs	r0, #0
  4001ca:	4770      	bx	lr
  4001cc:	2001      	movs	r0, #1
  4001ce:	4770      	bx	lr

004001d0 <_write>:
  4001d0:	3801      	subs	r0, #1
  4001d2:	2802      	cmp	r0, #2
  4001d4:	d815      	bhi.n	400202 <_write+0x32>
  4001d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001da:	460e      	mov	r6, r1
  4001dc:	4614      	mov	r4, r2
  4001de:	b19a      	cbz	r2, 400208 <_write+0x38>
  4001e0:	460d      	mov	r5, r1
  4001e2:	f8df 8038 	ldr.w	r8, [pc, #56]	; 40021c <_write+0x4c>
  4001e6:	4f0c      	ldr	r7, [pc, #48]	; (400218 <_write+0x48>)
  4001e8:	f8d8 0000 	ldr.w	r0, [r8]
  4001ec:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001f0:	683b      	ldr	r3, [r7, #0]
  4001f2:	4798      	blx	r3
  4001f4:	2800      	cmp	r0, #0
  4001f6:	db0a      	blt.n	40020e <_write+0x3e>
  4001f8:	1ba8      	subs	r0, r5, r6
  4001fa:	3c01      	subs	r4, #1
  4001fc:	d1f4      	bne.n	4001e8 <_write+0x18>
  4001fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400202:	f04f 30ff 	mov.w	r0, #4294967295
  400206:	4770      	bx	lr
  400208:	4610      	mov	r0, r2
  40020a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40020e:	f04f 30ff 	mov.w	r0, #4294967295
  400212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400216:	bf00      	nop
  400218:	200008a4 	.word	0x200008a4
  40021c:	200008a8 	.word	0x200008a8

00400220 <usart_serial_write_packet>:
 *
 */
status_code_t usart_serial_write_packet(usart_if usart, const uint8_t *data,
		size_t len)
{
	while (len) {
  400220:	b362      	cbz	r2, 40027c <usart_serial_write_packet+0x5c>
{
  400222:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400226:	4693      	mov	fp, r2
  400228:	4607      	mov	r7, r0
  40022a:	460e      	mov	r6, r1
  40022c:	448b      	add	fp, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  40022e:	f8df 8058 	ldr.w	r8, [pc, #88]	; 400288 <usart_serial_write_packet+0x68>
		while (uart_write((Uart*)p_usart, c)!=0);
  400232:	4d13      	ldr	r5, [pc, #76]	; (400280 <usart_serial_write_packet+0x60>)
		return 1;
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400234:	f8df 9054 	ldr.w	r9, [pc, #84]	; 40028c <usart_serial_write_packet+0x6c>
  400238:	e006      	b.n	400248 <usart_serial_write_packet+0x28>
		while (uart_write((Uart*)p_usart, c)!=0);
  40023a:	4621      	mov	r1, r4
  40023c:	4640      	mov	r0, r8
  40023e:	47a8      	blx	r5
  400240:	2800      	cmp	r0, #0
  400242:	d1fa      	bne.n	40023a <usart_serial_write_packet+0x1a>
	while (len) {
  400244:	45b3      	cmp	fp, r6
  400246:	d016      	beq.n	400276 <usart_serial_write_packet+0x56>
		usart_serial_putchar(usart, *data);
  400248:	f816 4b01 	ldrb.w	r4, [r6], #1
	if (UART0 == (Uart*)p_usart) {
  40024c:	4547      	cmp	r7, r8
  40024e:	d0f4      	beq.n	40023a <usart_serial_write_packet+0x1a>
	if (UART1 == (Uart*)p_usart) {
  400250:	454f      	cmp	r7, r9
  400252:	d00a      	beq.n	40026a <usart_serial_write_packet+0x4a>
# endif
#endif /* ifdef UART */


#ifdef USART
	if (USART == p_usart) {
  400254:	4b0b      	ldr	r3, [pc, #44]	; (400284 <usart_serial_write_packet+0x64>)
  400256:	429f      	cmp	r7, r3
  400258:	d1f4      	bne.n	400244 <usart_serial_write_packet+0x24>
		while (usart_write(p_usart, c)!=0);
  40025a:	f8df a034 	ldr.w	sl, [pc, #52]	; 400290 <usart_serial_write_packet+0x70>
  40025e:	4621      	mov	r1, r4
  400260:	4808      	ldr	r0, [pc, #32]	; (400284 <usart_serial_write_packet+0x64>)
  400262:	47d0      	blx	sl
  400264:	2800      	cmp	r0, #0
  400266:	d1fa      	bne.n	40025e <usart_serial_write_packet+0x3e>
  400268:	e7ec      	b.n	400244 <usart_serial_write_packet+0x24>
		while (uart_write((Uart*)p_usart, c)!=0);
  40026a:	4621      	mov	r1, r4
  40026c:	4648      	mov	r0, r9
  40026e:	47a8      	blx	r5
  400270:	2800      	cmp	r0, #0
  400272:	d1fa      	bne.n	40026a <usart_serial_write_packet+0x4a>
  400274:	e7e6      	b.n	400244 <usart_serial_write_packet+0x24>
		len--;
		data++;
	}
	return STATUS_OK;
}
  400276:	2000      	movs	r0, #0
  400278:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40027c:	2000      	movs	r0, #0
  40027e:	4770      	bx	lr
  400280:	004002cd 	.word	0x004002cd
  400284:	40024000 	.word	0x40024000
  400288:	400e0600 	.word	0x400e0600
  40028c:	400e0800 	.word	0x400e0800
  400290:	004001a5 	.word	0x004001a5

00400294 <uart_init>:
  400294:	b410      	push	{r4}
  400296:	23ac      	movs	r3, #172	; 0xac
  400298:	6003      	str	r3, [r0, #0]
  40029a:	680b      	ldr	r3, [r1, #0]
  40029c:	684a      	ldr	r2, [r1, #4]
  40029e:	fbb3 f3f2 	udiv	r3, r3, r2
  4002a2:	091b      	lsrs	r3, r3, #4
  4002a4:	1e5c      	subs	r4, r3, #1
  4002a6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4002aa:	4294      	cmp	r4, r2
  4002ac:	d80c      	bhi.n	4002c8 <uart_init+0x34>
  4002ae:	6203      	str	r3, [r0, #32]
  4002b0:	688b      	ldr	r3, [r1, #8]
  4002b2:	6043      	str	r3, [r0, #4]
  4002b4:	f240 2302 	movw	r3, #514	; 0x202
  4002b8:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
  4002bc:	2350      	movs	r3, #80	; 0x50
  4002be:	6003      	str	r3, [r0, #0]
  4002c0:	2000      	movs	r0, #0
  4002c2:	f85d 4b04 	ldr.w	r4, [sp], #4
  4002c6:	4770      	bx	lr
  4002c8:	2001      	movs	r0, #1
  4002ca:	e7fa      	b.n	4002c2 <uart_init+0x2e>

004002cc <uart_write>:
  4002cc:	6943      	ldr	r3, [r0, #20]
  4002ce:	f013 0f02 	tst.w	r3, #2
  4002d2:	bf1a      	itte	ne
  4002d4:	61c1      	strne	r1, [r0, #28]
  4002d6:	2000      	movne	r0, #0
  4002d8:	2001      	moveq	r0, #1
  4002da:	4770      	bx	lr

004002dc <uart_read>:
  4002dc:	6943      	ldr	r3, [r0, #20]
  4002de:	f013 0f01 	tst.w	r3, #1
  4002e2:	bf1d      	ittte	ne
  4002e4:	6983      	ldrne	r3, [r0, #24]
  4002e6:	700b      	strbne	r3, [r1, #0]
  4002e8:	2000      	movne	r0, #0
  4002ea:	2001      	moveq	r0, #1
  4002ec:	4770      	bx	lr
	...

004002f0 <sysclk_init>:
}
#endif // CONFIG_USBCLK_SOURCE
#endif

void sysclk_init(void)
{
  4002f0:	b510      	push	{r4, lr}
	uint32_t unique_id[32];
	uint32_t trim_value;
#endif

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4002f2:	480a      	ldr	r0, [pc, #40]	; (40031c <sysclk_init+0x2c>)
  4002f4:	4b0a      	ldr	r3, [pc, #40]	; (400320 <sysclk_init+0x30>)
  4002f6:	4798      	blx	r3
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4002f8:	4b0a      	ldr	r3, [pc, #40]	; (400324 <sysclk_init+0x34>)
  4002fa:	4798      	blx	r3
		PMC->CKGR_PLLAR = p_cfg->ctrl;
  4002fc:	4a0a      	ldr	r2, [pc, #40]	; (400328 <sysclk_init+0x38>)
  4002fe:	4b0b      	ldr	r3, [pc, #44]	; (40032c <sysclk_init+0x3c>)
  400300:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  400302:	4c0b      	ldr	r4, [pc, #44]	; (400330 <sysclk_init+0x40>)
  400304:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400306:	2800      	cmp	r0, #0
  400308:	d0fc      	beq.n	400304 <sysclk_init+0x14>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40030a:	2000      	movs	r0, #0
  40030c:	4b09      	ldr	r3, [pc, #36]	; (400334 <sysclk_init+0x44>)
  40030e:	4798      	blx	r3
	}
#endif
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400310:	4b09      	ldr	r3, [pc, #36]	; (400338 <sysclk_init+0x48>)
  400312:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400314:	4801      	ldr	r0, [pc, #4]	; (40031c <sysclk_init+0x2c>)
  400316:	4b02      	ldr	r3, [pc, #8]	; (400320 <sysclk_init+0x30>)
  400318:	4798      	blx	r3
  40031a:	bd10      	pop	{r4, pc}
  40031c:	02dc6c00 	.word	0x02dc6c00
  400320:	00400601 	.word	0x00400601
  400324:	004003a1 	.word	0x004003a1
  400328:	05db3f01 	.word	0x05db3f01
  40032c:	400e0400 	.word	0x400e0400
  400330:	004003ad 	.word	0x004003ad
  400334:	0040033d 	.word	0x0040033d
  400338:	00400519 	.word	0x00400519

0040033c <pmc_switch_mck_to_pllack>:
  40033c:	4a17      	ldr	r2, [pc, #92]	; (40039c <pmc_switch_mck_to_pllack+0x60>)
  40033e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400340:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400344:	4318      	orrs	r0, r3
  400346:	6310      	str	r0, [r2, #48]	; 0x30
  400348:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40034a:	f013 0f08 	tst.w	r3, #8
  40034e:	d10a      	bne.n	400366 <pmc_switch_mck_to_pllack+0x2a>
  400350:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400354:	4911      	ldr	r1, [pc, #68]	; (40039c <pmc_switch_mck_to_pllack+0x60>)
  400356:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400358:	f012 0f08 	tst.w	r2, #8
  40035c:	d103      	bne.n	400366 <pmc_switch_mck_to_pllack+0x2a>
  40035e:	3b01      	subs	r3, #1
  400360:	d1f9      	bne.n	400356 <pmc_switch_mck_to_pllack+0x1a>
  400362:	2001      	movs	r0, #1
  400364:	4770      	bx	lr
  400366:	4a0d      	ldr	r2, [pc, #52]	; (40039c <pmc_switch_mck_to_pllack+0x60>)
  400368:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40036a:	f023 0303 	bic.w	r3, r3, #3
  40036e:	f043 0302 	orr.w	r3, r3, #2
  400372:	6313      	str	r3, [r2, #48]	; 0x30
  400374:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400376:	f013 0f08 	tst.w	r3, #8
  40037a:	d10a      	bne.n	400392 <pmc_switch_mck_to_pllack+0x56>
  40037c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400380:	4906      	ldr	r1, [pc, #24]	; (40039c <pmc_switch_mck_to_pllack+0x60>)
  400382:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400384:	f012 0f08 	tst.w	r2, #8
  400388:	d105      	bne.n	400396 <pmc_switch_mck_to_pllack+0x5a>
  40038a:	3b01      	subs	r3, #1
  40038c:	d1f9      	bne.n	400382 <pmc_switch_mck_to_pllack+0x46>
  40038e:	2001      	movs	r0, #1
  400390:	4770      	bx	lr
  400392:	2000      	movs	r0, #0
  400394:	4770      	bx	lr
  400396:	2000      	movs	r0, #0
  400398:	4770      	bx	lr
  40039a:	bf00      	nop
  40039c:	400e0400 	.word	0x400e0400

004003a0 <pmc_disable_pllack>:
  4003a0:	2200      	movs	r2, #0
  4003a2:	4b01      	ldr	r3, [pc, #4]	; (4003a8 <pmc_disable_pllack+0x8>)
  4003a4:	629a      	str	r2, [r3, #40]	; 0x28
  4003a6:	4770      	bx	lr
  4003a8:	400e0400 	.word	0x400e0400

004003ac <pmc_is_locked_pllack>:
  4003ac:	4b02      	ldr	r3, [pc, #8]	; (4003b8 <pmc_is_locked_pllack+0xc>)
  4003ae:	6e98      	ldr	r0, [r3, #104]	; 0x68
  4003b0:	f000 0002 	and.w	r0, r0, #2
  4003b4:	4770      	bx	lr
  4003b6:	bf00      	nop
  4003b8:	400e0400 	.word	0x400e0400

004003bc <pmc_enable_periph_clk>:
  4003bc:	282f      	cmp	r0, #47	; 0x2f
  4003be:	d80e      	bhi.n	4003de <pmc_enable_periph_clk+0x22>
  4003c0:	281f      	cmp	r0, #31
  4003c2:	d80e      	bhi.n	4003e2 <pmc_enable_periph_clk+0x26>
  4003c4:	4b09      	ldr	r3, [pc, #36]	; (4003ec <pmc_enable_periph_clk+0x30>)
  4003c6:	699a      	ldr	r2, [r3, #24]
  4003c8:	2301      	movs	r3, #1
  4003ca:	4083      	lsls	r3, r0
  4003cc:	4393      	bics	r3, r2
  4003ce:	d00a      	beq.n	4003e6 <pmc_enable_periph_clk+0x2a>
  4003d0:	2301      	movs	r3, #1
  4003d2:	fa03 f000 	lsl.w	r0, r3, r0
  4003d6:	4b05      	ldr	r3, [pc, #20]	; (4003ec <pmc_enable_periph_clk+0x30>)
  4003d8:	6118      	str	r0, [r3, #16]
  4003da:	2000      	movs	r0, #0
  4003dc:	4770      	bx	lr
  4003de:	2001      	movs	r0, #1
  4003e0:	4770      	bx	lr
  4003e2:	2000      	movs	r0, #0
  4003e4:	4770      	bx	lr
  4003e6:	2000      	movs	r0, #0
  4003e8:	4770      	bx	lr
  4003ea:	bf00      	nop
  4003ec:	400e0400 	.word	0x400e0400

004003f0 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  4003f0:	b510      	push	{r4, lr}
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
	
	// watchdog timer
	WDT->WDT_MR = WDT_MR_WDDIS;                    // disable watchdog
  4003f2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4003f6:	4b0d      	ldr	r3, [pc, #52]	; (40042c <board_init+0x3c>)
  4003f8:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4003fa:	200b      	movs	r0, #11
  4003fc:	4c0c      	ldr	r4, [pc, #48]	; (400430 <board_init+0x40>)
  4003fe:	47a0      	blx	r4
  400400:	200c      	movs	r0, #12
  400402:	47a0      	blx	r4
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400404:	4b0b      	ldr	r3, [pc, #44]	; (400434 <board_init+0x44>)
  400406:	f44f 62c0 	mov.w	r2, #1536	; 0x600
  40040a:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  40040c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400410:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400412:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400414:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400418:	6f19      	ldr	r1, [r3, #112]	; 0x70
  40041a:	f421 61c0 	bic.w	r1, r1, #1536	; 0x600
  40041e:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400420:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400422:	f421 61c0 	bic.w	r1, r1, #1536	; 0x600
  400426:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400428:	605a      	str	r2, [r3, #4]
  40042a:	bd10      	pop	{r4, pc}
  40042c:	400e1450 	.word	0x400e1450
  400430:	004003bd 	.word	0x004003bd
  400434:	400e0e00 	.word	0x400e0e00

00400438 <Dummy_Handler>:
  400438:	e7fe      	b.n	400438 <Dummy_Handler>
	...

0040043c <Reset_Handler>:
  40043c:	b500      	push	{lr}
  40043e:	b083      	sub	sp, #12
  400440:	4b2a      	ldr	r3, [pc, #168]	; (4004ec <Reset_Handler+0xb0>)
  400442:	4a2b      	ldr	r2, [pc, #172]	; (4004f0 <Reset_Handler+0xb4>)
  400444:	429a      	cmp	r2, r3
  400446:	d010      	beq.n	40046a <Reset_Handler+0x2e>
  400448:	4b2a      	ldr	r3, [pc, #168]	; (4004f4 <Reset_Handler+0xb8>)
  40044a:	4a28      	ldr	r2, [pc, #160]	; (4004ec <Reset_Handler+0xb0>)
  40044c:	429a      	cmp	r2, r3
  40044e:	d20c      	bcs.n	40046a <Reset_Handler+0x2e>
  400450:	3b01      	subs	r3, #1
  400452:	1a9b      	subs	r3, r3, r2
  400454:	f023 0303 	bic.w	r3, r3, #3
  400458:	3304      	adds	r3, #4
  40045a:	4413      	add	r3, r2
  40045c:	4924      	ldr	r1, [pc, #144]	; (4004f0 <Reset_Handler+0xb4>)
  40045e:	f851 0b04 	ldr.w	r0, [r1], #4
  400462:	f842 0b04 	str.w	r0, [r2], #4
  400466:	429a      	cmp	r2, r3
  400468:	d1f9      	bne.n	40045e <Reset_Handler+0x22>
  40046a:	4b23      	ldr	r3, [pc, #140]	; (4004f8 <Reset_Handler+0xbc>)
  40046c:	4a23      	ldr	r2, [pc, #140]	; (4004fc <Reset_Handler+0xc0>)
  40046e:	429a      	cmp	r2, r3
  400470:	d20a      	bcs.n	400488 <Reset_Handler+0x4c>
  400472:	3b01      	subs	r3, #1
  400474:	1a9b      	subs	r3, r3, r2
  400476:	f023 0303 	bic.w	r3, r3, #3
  40047a:	3304      	adds	r3, #4
  40047c:	4413      	add	r3, r2
  40047e:	2100      	movs	r1, #0
  400480:	f842 1b04 	str.w	r1, [r2], #4
  400484:	4293      	cmp	r3, r2
  400486:	d1fb      	bne.n	400480 <Reset_Handler+0x44>
  400488:	4a1d      	ldr	r2, [pc, #116]	; (400500 <Reset_Handler+0xc4>)
  40048a:	f022 017f 	bic.w	r1, r2, #127	; 0x7f
  40048e:	4b1d      	ldr	r3, [pc, #116]	; (400504 <Reset_Handler+0xc8>)
  400490:	6099      	str	r1, [r3, #8]
  400492:	f3ef 8310 	mrs	r3, PRIMASK
  400496:	fab3 f383 	clz	r3, r3
  40049a:	095b      	lsrs	r3, r3, #5
  40049c:	9301      	str	r3, [sp, #4]
  40049e:	b672      	cpsid	i
  4004a0:	f3bf 8f5f 	dmb	sy
  4004a4:	2100      	movs	r1, #0
  4004a6:	4b18      	ldr	r3, [pc, #96]	; (400508 <Reset_Handler+0xcc>)
  4004a8:	7019      	strb	r1, [r3, #0]
  4004aa:	9801      	ldr	r0, [sp, #4]
  4004ac:	4917      	ldr	r1, [pc, #92]	; (40050c <Reset_Handler+0xd0>)
  4004ae:	680b      	ldr	r3, [r1, #0]
  4004b0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4004b4:	600b      	str	r3, [r1, #0]
  4004b6:	f3bf 8f4f 	dsb	sy
  4004ba:	f3bf 8f6f 	isb	sy
  4004be:	b128      	cbz	r0, 4004cc <Reset_Handler+0x90>
  4004c0:	2101      	movs	r1, #1
  4004c2:	4b11      	ldr	r3, [pc, #68]	; (400508 <Reset_Handler+0xcc>)
  4004c4:	7019      	strb	r1, [r3, #0]
  4004c6:	f3bf 8f5f 	dmb	sy
  4004ca:	b662      	cpsie	i
  4004cc:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
  4004d0:	f5b2 3fc0 	cmp.w	r2, #98304	; 0x18000
  4004d4:	d204      	bcs.n	4004e0 <Reset_Handler+0xa4>
  4004d6:	4a0b      	ldr	r2, [pc, #44]	; (400504 <Reset_Handler+0xc8>)
  4004d8:	6893      	ldr	r3, [r2, #8]
  4004da:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  4004de:	6093      	str	r3, [r2, #8]
  4004e0:	4b0b      	ldr	r3, [pc, #44]	; (400510 <Reset_Handler+0xd4>)
  4004e2:	4798      	blx	r3
  4004e4:	4b0b      	ldr	r3, [pc, #44]	; (400514 <Reset_Handler+0xd8>)
  4004e6:	4798      	blx	r3
  4004e8:	e7fe      	b.n	4004e8 <Reset_Handler+0xac>
  4004ea:	bf00      	nop
  4004ec:	20000000 	.word	0x20000000
  4004f0:	00401980 	.word	0x00401980
  4004f4:	2000084c 	.word	0x2000084c
  4004f8:	200008d4 	.word	0x200008d4
  4004fc:	2000084c 	.word	0x2000084c
  400500:	00400000 	.word	0x00400000
  400504:	e000ed00 	.word	0xe000ed00
  400508:	20000000 	.word	0x20000000
  40050c:	e000ed88 	.word	0xe000ed88
  400510:	00400845 	.word	0x00400845
  400514:	00400765 	.word	0x00400765

00400518 <SystemCoreClockUpdate>:
  400518:	4b31      	ldr	r3, [pc, #196]	; (4005e0 <SystemCoreClockUpdate+0xc8>)
  40051a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40051c:	f003 0303 	and.w	r3, r3, #3
  400520:	2b01      	cmp	r3, #1
  400522:	d01d      	beq.n	400560 <SystemCoreClockUpdate+0x48>
  400524:	b183      	cbz	r3, 400548 <SystemCoreClockUpdate+0x30>
  400526:	2b02      	cmp	r3, #2
  400528:	d036      	beq.n	400598 <SystemCoreClockUpdate+0x80>
  40052a:	4b2d      	ldr	r3, [pc, #180]	; (4005e0 <SystemCoreClockUpdate+0xc8>)
  40052c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40052e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400532:	2b70      	cmp	r3, #112	; 0x70
  400534:	d04b      	beq.n	4005ce <SystemCoreClockUpdate+0xb6>
  400536:	4b2a      	ldr	r3, [pc, #168]	; (4005e0 <SystemCoreClockUpdate+0xc8>)
  400538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40053a:	492a      	ldr	r1, [pc, #168]	; (4005e4 <SystemCoreClockUpdate+0xcc>)
  40053c:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400540:	680b      	ldr	r3, [r1, #0]
  400542:	40d3      	lsrs	r3, r2
  400544:	600b      	str	r3, [r1, #0]
  400546:	4770      	bx	lr
  400548:	4b27      	ldr	r3, [pc, #156]	; (4005e8 <SystemCoreClockUpdate+0xd0>)
  40054a:	695b      	ldr	r3, [r3, #20]
  40054c:	f013 0f80 	tst.w	r3, #128	; 0x80
  400550:	bf14      	ite	ne
  400552:	f44f 4200 	movne.w	r2, #32768	; 0x8000
  400556:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40055a:	4b22      	ldr	r3, [pc, #136]	; (4005e4 <SystemCoreClockUpdate+0xcc>)
  40055c:	601a      	str	r2, [r3, #0]
  40055e:	e7e4      	b.n	40052a <SystemCoreClockUpdate+0x12>
  400560:	4b1f      	ldr	r3, [pc, #124]	; (4005e0 <SystemCoreClockUpdate+0xc8>)
  400562:	6a1b      	ldr	r3, [r3, #32]
  400564:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400568:	d003      	beq.n	400572 <SystemCoreClockUpdate+0x5a>
  40056a:	4a20      	ldr	r2, [pc, #128]	; (4005ec <SystemCoreClockUpdate+0xd4>)
  40056c:	4b1d      	ldr	r3, [pc, #116]	; (4005e4 <SystemCoreClockUpdate+0xcc>)
  40056e:	601a      	str	r2, [r3, #0]
  400570:	e7db      	b.n	40052a <SystemCoreClockUpdate+0x12>
  400572:	4a1f      	ldr	r2, [pc, #124]	; (4005f0 <SystemCoreClockUpdate+0xd8>)
  400574:	4b1b      	ldr	r3, [pc, #108]	; (4005e4 <SystemCoreClockUpdate+0xcc>)
  400576:	601a      	str	r2, [r3, #0]
  400578:	4b19      	ldr	r3, [pc, #100]	; (4005e0 <SystemCoreClockUpdate+0xc8>)
  40057a:	6a1b      	ldr	r3, [r3, #32]
  40057c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400580:	2b10      	cmp	r3, #16
  400582:	d005      	beq.n	400590 <SystemCoreClockUpdate+0x78>
  400584:	2b20      	cmp	r3, #32
  400586:	d1d0      	bne.n	40052a <SystemCoreClockUpdate+0x12>
  400588:	4a1a      	ldr	r2, [pc, #104]	; (4005f4 <SystemCoreClockUpdate+0xdc>)
  40058a:	4b16      	ldr	r3, [pc, #88]	; (4005e4 <SystemCoreClockUpdate+0xcc>)
  40058c:	601a      	str	r2, [r3, #0]
  40058e:	e7cc      	b.n	40052a <SystemCoreClockUpdate+0x12>
  400590:	4a19      	ldr	r2, [pc, #100]	; (4005f8 <SystemCoreClockUpdate+0xe0>)
  400592:	4b14      	ldr	r3, [pc, #80]	; (4005e4 <SystemCoreClockUpdate+0xcc>)
  400594:	601a      	str	r2, [r3, #0]
  400596:	e7c8      	b.n	40052a <SystemCoreClockUpdate+0x12>
  400598:	4b13      	ldr	r3, [pc, #76]	; (4005e8 <SystemCoreClockUpdate+0xd0>)
  40059a:	695b      	ldr	r3, [r3, #20]
  40059c:	f013 0f80 	tst.w	r3, #128	; 0x80
  4005a0:	bf14      	ite	ne
  4005a2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
  4005a6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4005aa:	4b0e      	ldr	r3, [pc, #56]	; (4005e4 <SystemCoreClockUpdate+0xcc>)
  4005ac:	601a      	str	r2, [r3, #0]
  4005ae:	4b0c      	ldr	r3, [pc, #48]	; (4005e0 <SystemCoreClockUpdate+0xc8>)
  4005b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4005b2:	f003 0303 	and.w	r3, r3, #3
  4005b6:	2b02      	cmp	r3, #2
  4005b8:	d1b7      	bne.n	40052a <SystemCoreClockUpdate+0x12>
  4005ba:	4b09      	ldr	r3, [pc, #36]	; (4005e0 <SystemCoreClockUpdate+0xc8>)
  4005bc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
  4005be:	4909      	ldr	r1, [pc, #36]	; (4005e4 <SystemCoreClockUpdate+0xcc>)
  4005c0:	f3c2 420b 	ubfx	r2, r2, #16, #12
  4005c4:	680b      	ldr	r3, [r1, #0]
  4005c6:	fb02 3303 	mla	r3, r2, r3, r3
  4005ca:	600b      	str	r3, [r1, #0]
  4005cc:	e7ad      	b.n	40052a <SystemCoreClockUpdate+0x12>
  4005ce:	4a05      	ldr	r2, [pc, #20]	; (4005e4 <SystemCoreClockUpdate+0xcc>)
  4005d0:	6813      	ldr	r3, [r2, #0]
  4005d2:	490a      	ldr	r1, [pc, #40]	; (4005fc <SystemCoreClockUpdate+0xe4>)
  4005d4:	fba1 1303 	umull	r1, r3, r1, r3
  4005d8:	085b      	lsrs	r3, r3, #1
  4005da:	6013      	str	r3, [r2, #0]
  4005dc:	4770      	bx	lr
  4005de:	bf00      	nop
  4005e0:	400e0400 	.word	0x400e0400
  4005e4:	20000004 	.word	0x20000004
  4005e8:	400e1410 	.word	0x400e1410
  4005ec:	00b71b00 	.word	0x00b71b00
  4005f0:	007a1200 	.word	0x007a1200
  4005f4:	016e3600 	.word	0x016e3600
  4005f8:	00f42400 	.word	0x00f42400
  4005fc:	aaaaaaab 	.word	0xaaaaaaab

00400600 <system_init_flash>:
  400600:	4b0b      	ldr	r3, [pc, #44]	; (400630 <system_init_flash+0x30>)
  400602:	4298      	cmp	r0, r3
  400604:	d90a      	bls.n	40061c <system_init_flash+0x1c>
  400606:	4b0b      	ldr	r3, [pc, #44]	; (400634 <system_init_flash+0x34>)
  400608:	4298      	cmp	r0, r3
  40060a:	d90c      	bls.n	400626 <system_init_flash+0x26>
  40060c:	4b0a      	ldr	r3, [pc, #40]	; (400638 <system_init_flash+0x38>)
  40060e:	4298      	cmp	r0, r3
  400610:	bf94      	ite	ls
  400612:	4a0a      	ldrls	r2, [pc, #40]	; (40063c <system_init_flash+0x3c>)
  400614:	4a0a      	ldrhi	r2, [pc, #40]	; (400640 <system_init_flash+0x40>)
  400616:	4b0b      	ldr	r3, [pc, #44]	; (400644 <system_init_flash+0x44>)
  400618:	601a      	str	r2, [r3, #0]
  40061a:	4770      	bx	lr
  40061c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  400620:	4b08      	ldr	r3, [pc, #32]	; (400644 <system_init_flash+0x44>)
  400622:	601a      	str	r2, [r3, #0]
  400624:	4770      	bx	lr
  400626:	4a08      	ldr	r2, [pc, #32]	; (400648 <system_init_flash+0x48>)
  400628:	4b06      	ldr	r3, [pc, #24]	; (400644 <system_init_flash+0x44>)
  40062a:	601a      	str	r2, [r3, #0]
  40062c:	4770      	bx	lr
  40062e:	bf00      	nop
  400630:	00b71aff 	.word	0x00b71aff
  400634:	017d783f 	.word	0x017d783f
  400638:	0243d57f 	.word	0x0243d57f
  40063c:	04000200 	.word	0x04000200
  400640:	04000300 	.word	0x04000300
  400644:	400e0a00 	.word	0x400e0a00
  400648:	04000100 	.word	0x04000100

0040064c <_sbrk>:
  40064c:	4b0a      	ldr	r3, [pc, #40]	; (400678 <_sbrk+0x2c>)
  40064e:	681b      	ldr	r3, [r3, #0]
  400650:	b153      	cbz	r3, 400668 <_sbrk+0x1c>
  400652:	4b09      	ldr	r3, [pc, #36]	; (400678 <_sbrk+0x2c>)
  400654:	681b      	ldr	r3, [r3, #0]
  400656:	181a      	adds	r2, r3, r0
  400658:	4908      	ldr	r1, [pc, #32]	; (40067c <_sbrk+0x30>)
  40065a:	4291      	cmp	r1, r2
  40065c:	db08      	blt.n	400670 <_sbrk+0x24>
  40065e:	4610      	mov	r0, r2
  400660:	4a05      	ldr	r2, [pc, #20]	; (400678 <_sbrk+0x2c>)
  400662:	6010      	str	r0, [r2, #0]
  400664:	4618      	mov	r0, r3
  400666:	4770      	bx	lr
  400668:	4a05      	ldr	r2, [pc, #20]	; (400680 <_sbrk+0x34>)
  40066a:	4b03      	ldr	r3, [pc, #12]	; (400678 <_sbrk+0x2c>)
  40066c:	601a      	str	r2, [r3, #0]
  40066e:	e7f0      	b.n	400652 <_sbrk+0x6>
  400670:	f04f 30ff 	mov.w	r0, #4294967295
  400674:	4770      	bx	lr
  400676:	bf00      	nop
  400678:	20000868 	.word	0x20000868
  40067c:	20017ffc 	.word	0x20017ffc
  400680:	200038d8 	.word	0x200038d8

00400684 <_close>:
  400684:	f04f 30ff 	mov.w	r0, #4294967295
  400688:	4770      	bx	lr

0040068a <_fstat>:
  40068a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  40068e:	604b      	str	r3, [r1, #4]
  400690:	2000      	movs	r0, #0
  400692:	4770      	bx	lr

00400694 <_lseek>:
  400694:	2000      	movs	r0, #0
  400696:	4770      	bx	lr

00400698 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400698:	b570      	push	{r4, r5, r6, lr}
  40069a:	b082      	sub	sp, #8
  40069c:	460c      	mov	r4, r1
	uint32_t val = 0;
  40069e:	2300      	movs	r3, #0
  4006a0:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4006a2:	4b12      	ldr	r3, [pc, #72]	; (4006ec <usart_serial_getchar+0x54>)
  4006a4:	4298      	cmp	r0, r3
  4006a6:	d007      	beq.n	4006b8 <usart_serial_getchar+0x20>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4006a8:	4b11      	ldr	r3, [pc, #68]	; (4006f0 <usart_serial_getchar+0x58>)
  4006aa:	4298      	cmp	r0, r3
  4006ac:	d00c      	beq.n	4006c8 <usart_serial_getchar+0x30>
# endif
#endif /* ifdef UART */


#ifdef USART
	if (USART == p_usart) {
  4006ae:	4b11      	ldr	r3, [pc, #68]	; (4006f4 <usart_serial_getchar+0x5c>)
  4006b0:	4298      	cmp	r0, r3
  4006b2:	d011      	beq.n	4006d8 <usart_serial_getchar+0x40>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  4006b4:	b002      	add	sp, #8
  4006b6:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_read((Uart*)p_usart, data));
  4006b8:	461e      	mov	r6, r3
  4006ba:	4d0f      	ldr	r5, [pc, #60]	; (4006f8 <usart_serial_getchar+0x60>)
  4006bc:	4621      	mov	r1, r4
  4006be:	4630      	mov	r0, r6
  4006c0:	47a8      	blx	r5
  4006c2:	2800      	cmp	r0, #0
  4006c4:	d1fa      	bne.n	4006bc <usart_serial_getchar+0x24>
  4006c6:	e7f5      	b.n	4006b4 <usart_serial_getchar+0x1c>
		while (uart_read((Uart*)p_usart, data));
  4006c8:	461e      	mov	r6, r3
  4006ca:	4d0b      	ldr	r5, [pc, #44]	; (4006f8 <usart_serial_getchar+0x60>)
  4006cc:	4621      	mov	r1, r4
  4006ce:	4630      	mov	r0, r6
  4006d0:	47a8      	blx	r5
  4006d2:	2800      	cmp	r0, #0
  4006d4:	d1fa      	bne.n	4006cc <usart_serial_getchar+0x34>
  4006d6:	e7ed      	b.n	4006b4 <usart_serial_getchar+0x1c>
		while (usart_read(p_usart, &val));
  4006d8:	461e      	mov	r6, r3
  4006da:	4d08      	ldr	r5, [pc, #32]	; (4006fc <usart_serial_getchar+0x64>)
  4006dc:	a901      	add	r1, sp, #4
  4006de:	4630      	mov	r0, r6
  4006e0:	47a8      	blx	r5
  4006e2:	2800      	cmp	r0, #0
  4006e4:	d1fa      	bne.n	4006dc <usart_serial_getchar+0x44>
		*data = (uint8_t)(val & 0xFF);
  4006e6:	9b01      	ldr	r3, [sp, #4]
  4006e8:	7023      	strb	r3, [r4, #0]
}
  4006ea:	e7e3      	b.n	4006b4 <usart_serial_getchar+0x1c>
  4006ec:	400e0600 	.word	0x400e0600
  4006f0:	400e0800 	.word	0x400e0800
  4006f4:	40024000 	.word	0x40024000
  4006f8:	004002dd 	.word	0x004002dd
  4006fc:	004001b9 	.word	0x004001b9

00400700 <usart_serial_putchar>:
{
  400700:	b570      	push	{r4, r5, r6, lr}
  400702:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400704:	4b12      	ldr	r3, [pc, #72]	; (400750 <usart_serial_putchar+0x50>)
  400706:	4298      	cmp	r0, r3
  400708:	d007      	beq.n	40071a <usart_serial_putchar+0x1a>
	if (UART1 == (Uart*)p_usart) {
  40070a:	4b12      	ldr	r3, [pc, #72]	; (400754 <usart_serial_putchar+0x54>)
  40070c:	4298      	cmp	r0, r3
  40070e:	d00d      	beq.n	40072c <usart_serial_putchar+0x2c>
	if (USART == p_usart) {
  400710:	4b11      	ldr	r3, [pc, #68]	; (400758 <usart_serial_putchar+0x58>)
  400712:	4298      	cmp	r0, r3
  400714:	d013      	beq.n	40073e <usart_serial_putchar+0x3e>
	return 0;
  400716:	2000      	movs	r0, #0
}
  400718:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40071a:	461e      	mov	r6, r3
  40071c:	4d0f      	ldr	r5, [pc, #60]	; (40075c <usart_serial_putchar+0x5c>)
  40071e:	4621      	mov	r1, r4
  400720:	4630      	mov	r0, r6
  400722:	47a8      	blx	r5
  400724:	2800      	cmp	r0, #0
  400726:	d1fa      	bne.n	40071e <usart_serial_putchar+0x1e>
		return 1;
  400728:	2001      	movs	r0, #1
  40072a:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40072c:	461e      	mov	r6, r3
  40072e:	4d0b      	ldr	r5, [pc, #44]	; (40075c <usart_serial_putchar+0x5c>)
  400730:	4621      	mov	r1, r4
  400732:	4630      	mov	r0, r6
  400734:	47a8      	blx	r5
  400736:	2800      	cmp	r0, #0
  400738:	d1fa      	bne.n	400730 <usart_serial_putchar+0x30>
		return 1;
  40073a:	2001      	movs	r0, #1
  40073c:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40073e:	461e      	mov	r6, r3
  400740:	4d07      	ldr	r5, [pc, #28]	; (400760 <usart_serial_putchar+0x60>)
  400742:	4621      	mov	r1, r4
  400744:	4630      	mov	r0, r6
  400746:	47a8      	blx	r5
  400748:	2800      	cmp	r0, #0
  40074a:	d1fa      	bne.n	400742 <usart_serial_putchar+0x42>
		return 1;
  40074c:	2001      	movs	r0, #1
  40074e:	bd70      	pop	{r4, r5, r6, pc}
  400750:	400e0600 	.word	0x400e0600
  400754:	400e0800 	.word	0x400e0800
  400758:	40024000 	.word	0x40024000
  40075c:	004002cd 	.word	0x004002cd
  400760:	004001a5 	.word	0x004001a5

00400764 <main>:
 * Support and FAQ: visit <a href="http://www.atmel.com/design-support/">Atmel Support</a>
 */
#include <asf.h>

int main (void)
{
  400764:	b580      	push	{r7, lr}
  400766:	b08c      	sub	sp, #48	; 0x30
	const char str[] = "Type 'a' to continue...\r\n";
  400768:	ac05      	add	r4, sp, #20
  40076a:	4d25      	ldr	r5, [pc, #148]	; (400800 <main+0x9c>)
  40076c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  40076e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  400770:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
  400774:	c403      	stmia	r4!, {r0, r1}
  400776:	8022      	strh	r2, [r4, #0]
	uint8_t rx_char = 0;
  400778:	2500      	movs	r5, #0
  40077a:	f88d 5013 	strb.w	r5, [sp, #19]
		.paritytype   = CONF_UART_PARITY,
		.stopbits     = CONF_UART_STOP_BITS
	};

	/* board and sysClk init */	
	sysclk_init();
  40077e:	4b21      	ldr	r3, [pc, #132]	; (400804 <main+0xa0>)
  400780:	4798      	blx	r3
	board_init();
  400782:	4b21      	ldr	r3, [pc, #132]	; (400808 <main+0xa4>)
  400784:	4798      	blx	r3
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400786:	4c21      	ldr	r4, [pc, #132]	; (40080c <main+0xa8>)
  400788:	4b21      	ldr	r3, [pc, #132]	; (400810 <main+0xac>)
  40078a:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  40078c:	4a21      	ldr	r2, [pc, #132]	; (400814 <main+0xb0>)
  40078e:	4b22      	ldr	r3, [pc, #136]	; (400818 <main+0xb4>)
  400790:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400792:	4a22      	ldr	r2, [pc, #136]	; (40081c <main+0xb8>)
  400794:	4b22      	ldr	r3, [pc, #136]	; (400820 <main+0xbc>)
  400796:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400798:	4b22      	ldr	r3, [pc, #136]	; (400824 <main+0xc0>)
  40079a:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  40079c:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  4007a0:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  4007a2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4007a6:	9303      	str	r3, [sp, #12]
  4007a8:	2008      	movs	r0, #8
  4007aa:	4b1f      	ldr	r3, [pc, #124]	; (400828 <main+0xc4>)
  4007ac:	4798      	blx	r3
		uart_init((Uart*)p_usart, &uart_settings);
  4007ae:	a901      	add	r1, sp, #4
  4007b0:	4620      	mov	r0, r4
  4007b2:	4b1e      	ldr	r3, [pc, #120]	; (40082c <main+0xc8>)
  4007b4:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  4007b6:	4f1e      	ldr	r7, [pc, #120]	; (400830 <main+0xcc>)
  4007b8:	683b      	ldr	r3, [r7, #0]
  4007ba:	4629      	mov	r1, r5
  4007bc:	6898      	ldr	r0, [r3, #8]
  4007be:	4e1d      	ldr	r6, [pc, #116]	; (400834 <main+0xd0>)
  4007c0:	47b0      	blx	r6
	setbuf(stdin, NULL);
  4007c2:	683b      	ldr	r3, [r7, #0]
  4007c4:	4629      	mov	r1, r5
  4007c6:	6858      	ldr	r0, [r3, #4]
  4007c8:	47b0      	blx	r6
	
	/* initial console message */
	//printf("\r\nHello, world!\r\n");
	
	// send a string using the write packet function
	usart_serial_write_packet(CONF_UART, (const uint8_t*)str, sizeof(str) - 1);
  4007ca:	2219      	movs	r2, #25
  4007cc:	a905      	add	r1, sp, #20
  4007ce:	4620      	mov	r0, r4
  4007d0:	4b19      	ldr	r3, [pc, #100]	; (400838 <main+0xd4>)
  4007d2:	4798      	blx	r3
		while (uart_read((Uart*)p_usart, data));
  4007d4:	4625      	mov	r5, r4
  4007d6:	4c19      	ldr	r4, [pc, #100]	; (40083c <main+0xd8>)
  4007d8:	f10d 0113 	add.w	r1, sp, #19
  4007dc:	4628      	mov	r0, r5
  4007de:	47a0      	blx	r4
  4007e0:	2800      	cmp	r0, #0
  4007e2:	d1f9      	bne.n	4007d8 <main+0x74>
	do 
	{
		// get a single character
		usart_serial_getchar(CONF_UART, &rx_char);
	} while (rx_char != 'a');
  4007e4:	f89d 3013 	ldrb.w	r3, [sp, #19]
  4007e8:	2b61      	cmp	r3, #97	; 0x61
  4007ea:	d1f5      	bne.n	4007d8 <main+0x74>
		while (uart_write((Uart*)p_usart, c)!=0);
  4007ec:	4e07      	ldr	r6, [pc, #28]	; (40080c <main+0xa8>)
  4007ee:	2541      	movs	r5, #65	; 0x41
  4007f0:	4c13      	ldr	r4, [pc, #76]	; (400840 <main+0xdc>)
  4007f2:	4629      	mov	r1, r5
  4007f4:	4630      	mov	r0, r6
  4007f6:	47a0      	blx	r4
  4007f8:	2800      	cmp	r0, #0
  4007fa:	d1fa      	bne.n	4007f2 <main+0x8e>
  4007fc:	e7fe      	b.n	4007fc <main+0x98>
  4007fe:	bf00      	nop
  400800:	0040193c 	.word	0x0040193c
  400804:	004002f1 	.word	0x004002f1
  400808:	004003f1 	.word	0x004003f1
  40080c:	400e0600 	.word	0x400e0600
  400810:	200008a8 	.word	0x200008a8
  400814:	00400701 	.word	0x00400701
  400818:	200008a4 	.word	0x200008a4
  40081c:	00400699 	.word	0x00400699
  400820:	200008a0 	.word	0x200008a0
  400824:	02dc6c00 	.word	0x02dc6c00
  400828:	004003bd 	.word	0x004003bd
  40082c:	00400295 	.word	0x00400295
  400830:	20000008 	.word	0x20000008
  400834:	00400931 	.word	0x00400931
  400838:	00400221 	.word	0x00400221
  40083c:	004002dd 	.word	0x004002dd
  400840:	004002cd 	.word	0x004002cd

00400844 <__libc_init_array>:
  400844:	b570      	push	{r4, r5, r6, lr}
  400846:	4e0f      	ldr	r6, [pc, #60]	; (400884 <__libc_init_array+0x40>)
  400848:	4d0f      	ldr	r5, [pc, #60]	; (400888 <__libc_init_array+0x44>)
  40084a:	1b76      	subs	r6, r6, r5
  40084c:	10b6      	asrs	r6, r6, #2
  40084e:	bf18      	it	ne
  400850:	2400      	movne	r4, #0
  400852:	d005      	beq.n	400860 <__libc_init_array+0x1c>
  400854:	3401      	adds	r4, #1
  400856:	f855 3b04 	ldr.w	r3, [r5], #4
  40085a:	4798      	blx	r3
  40085c:	42a6      	cmp	r6, r4
  40085e:	d1f9      	bne.n	400854 <__libc_init_array+0x10>
  400860:	4e0a      	ldr	r6, [pc, #40]	; (40088c <__libc_init_array+0x48>)
  400862:	4d0b      	ldr	r5, [pc, #44]	; (400890 <__libc_init_array+0x4c>)
  400864:	1b76      	subs	r6, r6, r5
  400866:	f001 f879 	bl	40195c <_init>
  40086a:	10b6      	asrs	r6, r6, #2
  40086c:	bf18      	it	ne
  40086e:	2400      	movne	r4, #0
  400870:	d006      	beq.n	400880 <__libc_init_array+0x3c>
  400872:	3401      	adds	r4, #1
  400874:	f855 3b04 	ldr.w	r3, [r5], #4
  400878:	4798      	blx	r3
  40087a:	42a6      	cmp	r6, r4
  40087c:	d1f9      	bne.n	400872 <__libc_init_array+0x2e>
  40087e:	bd70      	pop	{r4, r5, r6, pc}
  400880:	bd70      	pop	{r4, r5, r6, pc}
  400882:	bf00      	nop
  400884:	00401968 	.word	0x00401968
  400888:	00401968 	.word	0x00401968
  40088c:	00401970 	.word	0x00401970
  400890:	00401968 	.word	0x00401968

00400894 <memset>:
  400894:	b470      	push	{r4, r5, r6}
  400896:	0786      	lsls	r6, r0, #30
  400898:	d046      	beq.n	400928 <memset+0x94>
  40089a:	1e54      	subs	r4, r2, #1
  40089c:	2a00      	cmp	r2, #0
  40089e:	d041      	beq.n	400924 <memset+0x90>
  4008a0:	b2ca      	uxtb	r2, r1
  4008a2:	4603      	mov	r3, r0
  4008a4:	e002      	b.n	4008ac <memset+0x18>
  4008a6:	f114 34ff 	adds.w	r4, r4, #4294967295
  4008aa:	d33b      	bcc.n	400924 <memset+0x90>
  4008ac:	f803 2b01 	strb.w	r2, [r3], #1
  4008b0:	079d      	lsls	r5, r3, #30
  4008b2:	d1f8      	bne.n	4008a6 <memset+0x12>
  4008b4:	2c03      	cmp	r4, #3
  4008b6:	d92e      	bls.n	400916 <memset+0x82>
  4008b8:	b2cd      	uxtb	r5, r1
  4008ba:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4008be:	2c0f      	cmp	r4, #15
  4008c0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4008c4:	d919      	bls.n	4008fa <memset+0x66>
  4008c6:	f103 0210 	add.w	r2, r3, #16
  4008ca:	4626      	mov	r6, r4
  4008cc:	3e10      	subs	r6, #16
  4008ce:	2e0f      	cmp	r6, #15
  4008d0:	f842 5c10 	str.w	r5, [r2, #-16]
  4008d4:	f842 5c0c 	str.w	r5, [r2, #-12]
  4008d8:	f842 5c08 	str.w	r5, [r2, #-8]
  4008dc:	f842 5c04 	str.w	r5, [r2, #-4]
  4008e0:	f102 0210 	add.w	r2, r2, #16
  4008e4:	d8f2      	bhi.n	4008cc <memset+0x38>
  4008e6:	f1a4 0210 	sub.w	r2, r4, #16
  4008ea:	f022 020f 	bic.w	r2, r2, #15
  4008ee:	f004 040f 	and.w	r4, r4, #15
  4008f2:	3210      	adds	r2, #16
  4008f4:	2c03      	cmp	r4, #3
  4008f6:	4413      	add	r3, r2
  4008f8:	d90d      	bls.n	400916 <memset+0x82>
  4008fa:	461e      	mov	r6, r3
  4008fc:	4622      	mov	r2, r4
  4008fe:	3a04      	subs	r2, #4
  400900:	2a03      	cmp	r2, #3
  400902:	f846 5b04 	str.w	r5, [r6], #4
  400906:	d8fa      	bhi.n	4008fe <memset+0x6a>
  400908:	1f22      	subs	r2, r4, #4
  40090a:	f022 0203 	bic.w	r2, r2, #3
  40090e:	3204      	adds	r2, #4
  400910:	4413      	add	r3, r2
  400912:	f004 0403 	and.w	r4, r4, #3
  400916:	b12c      	cbz	r4, 400924 <memset+0x90>
  400918:	b2c9      	uxtb	r1, r1
  40091a:	441c      	add	r4, r3
  40091c:	f803 1b01 	strb.w	r1, [r3], #1
  400920:	429c      	cmp	r4, r3
  400922:	d1fb      	bne.n	40091c <memset+0x88>
  400924:	bc70      	pop	{r4, r5, r6}
  400926:	4770      	bx	lr
  400928:	4614      	mov	r4, r2
  40092a:	4603      	mov	r3, r0
  40092c:	e7c2      	b.n	4008b4 <memset+0x20>
  40092e:	bf00      	nop

00400930 <setbuf>:
  400930:	2900      	cmp	r1, #0
  400932:	bf0c      	ite	eq
  400934:	2202      	moveq	r2, #2
  400936:	2200      	movne	r2, #0
  400938:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40093c:	f000 b800 	b.w	400940 <setvbuf>

00400940 <setvbuf>:
  400940:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400944:	4c61      	ldr	r4, [pc, #388]	; (400acc <setvbuf+0x18c>)
  400946:	6825      	ldr	r5, [r4, #0]
  400948:	b083      	sub	sp, #12
  40094a:	4604      	mov	r4, r0
  40094c:	460f      	mov	r7, r1
  40094e:	4690      	mov	r8, r2
  400950:	461e      	mov	r6, r3
  400952:	b115      	cbz	r5, 40095a <setvbuf+0x1a>
  400954:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400956:	2b00      	cmp	r3, #0
  400958:	d064      	beq.n	400a24 <setvbuf+0xe4>
  40095a:	f1b8 0f02 	cmp.w	r8, #2
  40095e:	d006      	beq.n	40096e <setvbuf+0x2e>
  400960:	f1b8 0f01 	cmp.w	r8, #1
  400964:	f200 809f 	bhi.w	400aa6 <setvbuf+0x166>
  400968:	2e00      	cmp	r6, #0
  40096a:	f2c0 809c 	blt.w	400aa6 <setvbuf+0x166>
  40096e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  400970:	07d8      	lsls	r0, r3, #31
  400972:	d534      	bpl.n	4009de <setvbuf+0x9e>
  400974:	4621      	mov	r1, r4
  400976:	4628      	mov	r0, r5
  400978:	f000 f95a 	bl	400c30 <_fflush_r>
  40097c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40097e:	b141      	cbz	r1, 400992 <setvbuf+0x52>
  400980:	f104 0340 	add.w	r3, r4, #64	; 0x40
  400984:	4299      	cmp	r1, r3
  400986:	d002      	beq.n	40098e <setvbuf+0x4e>
  400988:	4628      	mov	r0, r5
  40098a:	f000 fa4b 	bl	400e24 <_free_r>
  40098e:	2300      	movs	r3, #0
  400990:	6323      	str	r3, [r4, #48]	; 0x30
  400992:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400996:	2200      	movs	r2, #0
  400998:	61a2      	str	r2, [r4, #24]
  40099a:	6062      	str	r2, [r4, #4]
  40099c:	061a      	lsls	r2, r3, #24
  40099e:	d43a      	bmi.n	400a16 <setvbuf+0xd6>
  4009a0:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4009a4:	f023 0303 	bic.w	r3, r3, #3
  4009a8:	f1b8 0f02 	cmp.w	r8, #2
  4009ac:	81a3      	strh	r3, [r4, #12]
  4009ae:	d01d      	beq.n	4009ec <setvbuf+0xac>
  4009b0:	ab01      	add	r3, sp, #4
  4009b2:	466a      	mov	r2, sp
  4009b4:	4621      	mov	r1, r4
  4009b6:	4628      	mov	r0, r5
  4009b8:	f000 fb4c 	bl	401054 <__swhatbuf_r>
  4009bc:	89a3      	ldrh	r3, [r4, #12]
  4009be:	4318      	orrs	r0, r3
  4009c0:	81a0      	strh	r0, [r4, #12]
  4009c2:	2e00      	cmp	r6, #0
  4009c4:	d132      	bne.n	400a2c <setvbuf+0xec>
  4009c6:	9e00      	ldr	r6, [sp, #0]
  4009c8:	4630      	mov	r0, r6
  4009ca:	f000 fb71 	bl	4010b0 <malloc>
  4009ce:	4607      	mov	r7, r0
  4009d0:	2800      	cmp	r0, #0
  4009d2:	d06b      	beq.n	400aac <setvbuf+0x16c>
  4009d4:	89a3      	ldrh	r3, [r4, #12]
  4009d6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4009da:	81a3      	strh	r3, [r4, #12]
  4009dc:	e028      	b.n	400a30 <setvbuf+0xf0>
  4009de:	89a3      	ldrh	r3, [r4, #12]
  4009e0:	0599      	lsls	r1, r3, #22
  4009e2:	d4c7      	bmi.n	400974 <setvbuf+0x34>
  4009e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4009e6:	f000 fb31 	bl	40104c <__retarget_lock_acquire_recursive>
  4009ea:	e7c3      	b.n	400974 <setvbuf+0x34>
  4009ec:	2500      	movs	r5, #0
  4009ee:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4009f0:	2600      	movs	r6, #0
  4009f2:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4009f6:	f043 0302 	orr.w	r3, r3, #2
  4009fa:	2001      	movs	r0, #1
  4009fc:	60a6      	str	r6, [r4, #8]
  4009fe:	07ce      	lsls	r6, r1, #31
  400a00:	81a3      	strh	r3, [r4, #12]
  400a02:	6022      	str	r2, [r4, #0]
  400a04:	6122      	str	r2, [r4, #16]
  400a06:	6160      	str	r0, [r4, #20]
  400a08:	d401      	bmi.n	400a0e <setvbuf+0xce>
  400a0a:	0598      	lsls	r0, r3, #22
  400a0c:	d53e      	bpl.n	400a8c <setvbuf+0x14c>
  400a0e:	4628      	mov	r0, r5
  400a10:	b003      	add	sp, #12
  400a12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400a16:	6921      	ldr	r1, [r4, #16]
  400a18:	4628      	mov	r0, r5
  400a1a:	f000 fa03 	bl	400e24 <_free_r>
  400a1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400a22:	e7bd      	b.n	4009a0 <setvbuf+0x60>
  400a24:	4628      	mov	r0, r5
  400a26:	f000 f95b 	bl	400ce0 <__sinit>
  400a2a:	e796      	b.n	40095a <setvbuf+0x1a>
  400a2c:	2f00      	cmp	r7, #0
  400a2e:	d0cb      	beq.n	4009c8 <setvbuf+0x88>
  400a30:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400a32:	2b00      	cmp	r3, #0
  400a34:	d033      	beq.n	400a9e <setvbuf+0x15e>
  400a36:	9b00      	ldr	r3, [sp, #0]
  400a38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  400a3c:	6027      	str	r7, [r4, #0]
  400a3e:	429e      	cmp	r6, r3
  400a40:	bf1c      	itt	ne
  400a42:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  400a46:	81a2      	strhne	r2, [r4, #12]
  400a48:	f1b8 0f01 	cmp.w	r8, #1
  400a4c:	bf04      	itt	eq
  400a4e:	f042 0201 	orreq.w	r2, r2, #1
  400a52:	81a2      	strheq	r2, [r4, #12]
  400a54:	b292      	uxth	r2, r2
  400a56:	f012 0308 	ands.w	r3, r2, #8
  400a5a:	6127      	str	r7, [r4, #16]
  400a5c:	6166      	str	r6, [r4, #20]
  400a5e:	d00e      	beq.n	400a7e <setvbuf+0x13e>
  400a60:	07d1      	lsls	r1, r2, #31
  400a62:	d51a      	bpl.n	400a9a <setvbuf+0x15a>
  400a64:	6e65      	ldr	r5, [r4, #100]	; 0x64
  400a66:	4276      	negs	r6, r6
  400a68:	2300      	movs	r3, #0
  400a6a:	f015 0501 	ands.w	r5, r5, #1
  400a6e:	61a6      	str	r6, [r4, #24]
  400a70:	60a3      	str	r3, [r4, #8]
  400a72:	d009      	beq.n	400a88 <setvbuf+0x148>
  400a74:	2500      	movs	r5, #0
  400a76:	4628      	mov	r0, r5
  400a78:	b003      	add	sp, #12
  400a7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400a7e:	60a3      	str	r3, [r4, #8]
  400a80:	6e65      	ldr	r5, [r4, #100]	; 0x64
  400a82:	f015 0501 	ands.w	r5, r5, #1
  400a86:	d1f5      	bne.n	400a74 <setvbuf+0x134>
  400a88:	0593      	lsls	r3, r2, #22
  400a8a:	d4c0      	bmi.n	400a0e <setvbuf+0xce>
  400a8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  400a8e:	f000 fadf 	bl	401050 <__retarget_lock_release_recursive>
  400a92:	4628      	mov	r0, r5
  400a94:	b003      	add	sp, #12
  400a96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400a9a:	60a6      	str	r6, [r4, #8]
  400a9c:	e7f0      	b.n	400a80 <setvbuf+0x140>
  400a9e:	4628      	mov	r0, r5
  400aa0:	f000 f91e 	bl	400ce0 <__sinit>
  400aa4:	e7c7      	b.n	400a36 <setvbuf+0xf6>
  400aa6:	f04f 35ff 	mov.w	r5, #4294967295
  400aaa:	e7b0      	b.n	400a0e <setvbuf+0xce>
  400aac:	f8dd 9000 	ldr.w	r9, [sp]
  400ab0:	45b1      	cmp	r9, r6
  400ab2:	d004      	beq.n	400abe <setvbuf+0x17e>
  400ab4:	4648      	mov	r0, r9
  400ab6:	f000 fafb 	bl	4010b0 <malloc>
  400aba:	4607      	mov	r7, r0
  400abc:	b920      	cbnz	r0, 400ac8 <setvbuf+0x188>
  400abe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400ac2:	f04f 35ff 	mov.w	r5, #4294967295
  400ac6:	e792      	b.n	4009ee <setvbuf+0xae>
  400ac8:	464e      	mov	r6, r9
  400aca:	e783      	b.n	4009d4 <setvbuf+0x94>
  400acc:	20000008 	.word	0x20000008

00400ad0 <register_fini>:
  400ad0:	4b02      	ldr	r3, [pc, #8]	; (400adc <register_fini+0xc>)
  400ad2:	b113      	cbz	r3, 400ada <register_fini+0xa>
  400ad4:	4802      	ldr	r0, [pc, #8]	; (400ae0 <register_fini+0x10>)
  400ad6:	f000 b805 	b.w	400ae4 <atexit>
  400ada:	4770      	bx	lr
  400adc:	00000000 	.word	0x00000000
  400ae0:	00400d51 	.word	0x00400d51

00400ae4 <atexit>:
  400ae4:	2300      	movs	r3, #0
  400ae6:	4601      	mov	r1, r0
  400ae8:	461a      	mov	r2, r3
  400aea:	4618      	mov	r0, r3
  400aec:	f000 be10 	b.w	401710 <__register_exitproc>

00400af0 <__sflush_r>:
  400af0:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  400af4:	b29a      	uxth	r2, r3
  400af6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400afa:	460d      	mov	r5, r1
  400afc:	0711      	lsls	r1, r2, #28
  400afe:	4680      	mov	r8, r0
  400b00:	d43a      	bmi.n	400b78 <__sflush_r+0x88>
  400b02:	686a      	ldr	r2, [r5, #4]
  400b04:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  400b08:	2a00      	cmp	r2, #0
  400b0a:	81ab      	strh	r3, [r5, #12]
  400b0c:	dd6f      	ble.n	400bee <__sflush_r+0xfe>
  400b0e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  400b10:	2c00      	cmp	r4, #0
  400b12:	d049      	beq.n	400ba8 <__sflush_r+0xb8>
  400b14:	2200      	movs	r2, #0
  400b16:	b29b      	uxth	r3, r3
  400b18:	f8d8 6000 	ldr.w	r6, [r8]
  400b1c:	f8c8 2000 	str.w	r2, [r8]
  400b20:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  400b24:	d067      	beq.n	400bf6 <__sflush_r+0x106>
  400b26:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  400b28:	075f      	lsls	r7, r3, #29
  400b2a:	d505      	bpl.n	400b38 <__sflush_r+0x48>
  400b2c:	6869      	ldr	r1, [r5, #4]
  400b2e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  400b30:	1a52      	subs	r2, r2, r1
  400b32:	b10b      	cbz	r3, 400b38 <__sflush_r+0x48>
  400b34:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  400b36:	1ad2      	subs	r2, r2, r3
  400b38:	2300      	movs	r3, #0
  400b3a:	69e9      	ldr	r1, [r5, #28]
  400b3c:	4640      	mov	r0, r8
  400b3e:	47a0      	blx	r4
  400b40:	1c44      	adds	r4, r0, #1
  400b42:	d03c      	beq.n	400bbe <__sflush_r+0xce>
  400b44:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  400b48:	692a      	ldr	r2, [r5, #16]
  400b4a:	602a      	str	r2, [r5, #0]
  400b4c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  400b50:	2200      	movs	r2, #0
  400b52:	81ab      	strh	r3, [r5, #12]
  400b54:	04db      	lsls	r3, r3, #19
  400b56:	606a      	str	r2, [r5, #4]
  400b58:	d447      	bmi.n	400bea <__sflush_r+0xfa>
  400b5a:	6b29      	ldr	r1, [r5, #48]	; 0x30
  400b5c:	f8c8 6000 	str.w	r6, [r8]
  400b60:	b311      	cbz	r1, 400ba8 <__sflush_r+0xb8>
  400b62:	f105 0340 	add.w	r3, r5, #64	; 0x40
  400b66:	4299      	cmp	r1, r3
  400b68:	d002      	beq.n	400b70 <__sflush_r+0x80>
  400b6a:	4640      	mov	r0, r8
  400b6c:	f000 f95a 	bl	400e24 <_free_r>
  400b70:	2000      	movs	r0, #0
  400b72:	6328      	str	r0, [r5, #48]	; 0x30
  400b74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400b78:	692e      	ldr	r6, [r5, #16]
  400b7a:	b1ae      	cbz	r6, 400ba8 <__sflush_r+0xb8>
  400b7c:	682c      	ldr	r4, [r5, #0]
  400b7e:	602e      	str	r6, [r5, #0]
  400b80:	0791      	lsls	r1, r2, #30
  400b82:	bf0c      	ite	eq
  400b84:	696b      	ldreq	r3, [r5, #20]
  400b86:	2300      	movne	r3, #0
  400b88:	1ba4      	subs	r4, r4, r6
  400b8a:	60ab      	str	r3, [r5, #8]
  400b8c:	e00a      	b.n	400ba4 <__sflush_r+0xb4>
  400b8e:	4623      	mov	r3, r4
  400b90:	4632      	mov	r2, r6
  400b92:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  400b94:	69e9      	ldr	r1, [r5, #28]
  400b96:	4640      	mov	r0, r8
  400b98:	47b8      	blx	r7
  400b9a:	2800      	cmp	r0, #0
  400b9c:	eba4 0400 	sub.w	r4, r4, r0
  400ba0:	4406      	add	r6, r0
  400ba2:	dd04      	ble.n	400bae <__sflush_r+0xbe>
  400ba4:	2c00      	cmp	r4, #0
  400ba6:	dcf2      	bgt.n	400b8e <__sflush_r+0x9e>
  400ba8:	2000      	movs	r0, #0
  400baa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400bae:	89ab      	ldrh	r3, [r5, #12]
  400bb0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  400bb4:	81ab      	strh	r3, [r5, #12]
  400bb6:	f04f 30ff 	mov.w	r0, #4294967295
  400bba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400bbe:	f8d8 4000 	ldr.w	r4, [r8]
  400bc2:	2c1d      	cmp	r4, #29
  400bc4:	d8f3      	bhi.n	400bae <__sflush_r+0xbe>
  400bc6:	4b19      	ldr	r3, [pc, #100]	; (400c2c <__sflush_r+0x13c>)
  400bc8:	40e3      	lsrs	r3, r4
  400bca:	43db      	mvns	r3, r3
  400bcc:	f013 0301 	ands.w	r3, r3, #1
  400bd0:	d1ed      	bne.n	400bae <__sflush_r+0xbe>
  400bd2:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  400bd6:	606b      	str	r3, [r5, #4]
  400bd8:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  400bdc:	6929      	ldr	r1, [r5, #16]
  400bde:	81ab      	strh	r3, [r5, #12]
  400be0:	04da      	lsls	r2, r3, #19
  400be2:	6029      	str	r1, [r5, #0]
  400be4:	d5b9      	bpl.n	400b5a <__sflush_r+0x6a>
  400be6:	2c00      	cmp	r4, #0
  400be8:	d1b7      	bne.n	400b5a <__sflush_r+0x6a>
  400bea:	6528      	str	r0, [r5, #80]	; 0x50
  400bec:	e7b5      	b.n	400b5a <__sflush_r+0x6a>
  400bee:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  400bf0:	2a00      	cmp	r2, #0
  400bf2:	dc8c      	bgt.n	400b0e <__sflush_r+0x1e>
  400bf4:	e7d8      	b.n	400ba8 <__sflush_r+0xb8>
  400bf6:	2301      	movs	r3, #1
  400bf8:	69e9      	ldr	r1, [r5, #28]
  400bfa:	4640      	mov	r0, r8
  400bfc:	47a0      	blx	r4
  400bfe:	1c43      	adds	r3, r0, #1
  400c00:	4602      	mov	r2, r0
  400c02:	d002      	beq.n	400c0a <__sflush_r+0x11a>
  400c04:	89ab      	ldrh	r3, [r5, #12]
  400c06:	6aac      	ldr	r4, [r5, #40]	; 0x28
  400c08:	e78e      	b.n	400b28 <__sflush_r+0x38>
  400c0a:	f8d8 3000 	ldr.w	r3, [r8]
  400c0e:	2b00      	cmp	r3, #0
  400c10:	d0f8      	beq.n	400c04 <__sflush_r+0x114>
  400c12:	2b1d      	cmp	r3, #29
  400c14:	d001      	beq.n	400c1a <__sflush_r+0x12a>
  400c16:	2b16      	cmp	r3, #22
  400c18:	d102      	bne.n	400c20 <__sflush_r+0x130>
  400c1a:	f8c8 6000 	str.w	r6, [r8]
  400c1e:	e7c3      	b.n	400ba8 <__sflush_r+0xb8>
  400c20:	89ab      	ldrh	r3, [r5, #12]
  400c22:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  400c26:	81ab      	strh	r3, [r5, #12]
  400c28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c2c:	20400001 	.word	0x20400001

00400c30 <_fflush_r>:
  400c30:	b538      	push	{r3, r4, r5, lr}
  400c32:	460d      	mov	r5, r1
  400c34:	4604      	mov	r4, r0
  400c36:	b108      	cbz	r0, 400c3c <_fflush_r+0xc>
  400c38:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400c3a:	b1bb      	cbz	r3, 400c6c <_fflush_r+0x3c>
  400c3c:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  400c40:	b188      	cbz	r0, 400c66 <_fflush_r+0x36>
  400c42:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  400c44:	07db      	lsls	r3, r3, #31
  400c46:	d401      	bmi.n	400c4c <_fflush_r+0x1c>
  400c48:	0581      	lsls	r1, r0, #22
  400c4a:	d517      	bpl.n	400c7c <_fflush_r+0x4c>
  400c4c:	4620      	mov	r0, r4
  400c4e:	4629      	mov	r1, r5
  400c50:	f7ff ff4e 	bl	400af0 <__sflush_r>
  400c54:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  400c56:	07da      	lsls	r2, r3, #31
  400c58:	4604      	mov	r4, r0
  400c5a:	d402      	bmi.n	400c62 <_fflush_r+0x32>
  400c5c:	89ab      	ldrh	r3, [r5, #12]
  400c5e:	059b      	lsls	r3, r3, #22
  400c60:	d507      	bpl.n	400c72 <_fflush_r+0x42>
  400c62:	4620      	mov	r0, r4
  400c64:	bd38      	pop	{r3, r4, r5, pc}
  400c66:	4604      	mov	r4, r0
  400c68:	4620      	mov	r0, r4
  400c6a:	bd38      	pop	{r3, r4, r5, pc}
  400c6c:	f000 f838 	bl	400ce0 <__sinit>
  400c70:	e7e4      	b.n	400c3c <_fflush_r+0xc>
  400c72:	6da8      	ldr	r0, [r5, #88]	; 0x58
  400c74:	f000 f9ec 	bl	401050 <__retarget_lock_release_recursive>
  400c78:	4620      	mov	r0, r4
  400c7a:	bd38      	pop	{r3, r4, r5, pc}
  400c7c:	6da8      	ldr	r0, [r5, #88]	; 0x58
  400c7e:	f000 f9e5 	bl	40104c <__retarget_lock_acquire_recursive>
  400c82:	e7e3      	b.n	400c4c <_fflush_r+0x1c>

00400c84 <_cleanup_r>:
  400c84:	4901      	ldr	r1, [pc, #4]	; (400c8c <_cleanup_r+0x8>)
  400c86:	f000 b9b3 	b.w	400ff0 <_fwalk_reent>
  400c8a:	bf00      	nop
  400c8c:	004017f9 	.word	0x004017f9

00400c90 <std.isra.0>:
  400c90:	b510      	push	{r4, lr}
  400c92:	2300      	movs	r3, #0
  400c94:	4604      	mov	r4, r0
  400c96:	8181      	strh	r1, [r0, #12]
  400c98:	81c2      	strh	r2, [r0, #14]
  400c9a:	6003      	str	r3, [r0, #0]
  400c9c:	6043      	str	r3, [r0, #4]
  400c9e:	6083      	str	r3, [r0, #8]
  400ca0:	6643      	str	r3, [r0, #100]	; 0x64
  400ca2:	6103      	str	r3, [r0, #16]
  400ca4:	6143      	str	r3, [r0, #20]
  400ca6:	6183      	str	r3, [r0, #24]
  400ca8:	4619      	mov	r1, r3
  400caa:	2208      	movs	r2, #8
  400cac:	305c      	adds	r0, #92	; 0x5c
  400cae:	f7ff fdf1 	bl	400894 <memset>
  400cb2:	4807      	ldr	r0, [pc, #28]	; (400cd0 <std.isra.0+0x40>)
  400cb4:	4907      	ldr	r1, [pc, #28]	; (400cd4 <std.isra.0+0x44>)
  400cb6:	4a08      	ldr	r2, [pc, #32]	; (400cd8 <std.isra.0+0x48>)
  400cb8:	4b08      	ldr	r3, [pc, #32]	; (400cdc <std.isra.0+0x4c>)
  400cba:	6220      	str	r0, [r4, #32]
  400cbc:	61e4      	str	r4, [r4, #28]
  400cbe:	6261      	str	r1, [r4, #36]	; 0x24
  400cc0:	62a2      	str	r2, [r4, #40]	; 0x28
  400cc2:	62e3      	str	r3, [r4, #44]	; 0x2c
  400cc4:	f104 0058 	add.w	r0, r4, #88	; 0x58
  400cc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400ccc:	f000 b9ba 	b.w	401044 <__retarget_lock_init_recursive>
  400cd0:	0040165d 	.word	0x0040165d
  400cd4:	00401681 	.word	0x00401681
  400cd8:	004016bd 	.word	0x004016bd
  400cdc:	004016dd 	.word	0x004016dd

00400ce0 <__sinit>:
  400ce0:	b510      	push	{r4, lr}
  400ce2:	4604      	mov	r4, r0
  400ce4:	4812      	ldr	r0, [pc, #72]	; (400d30 <__sinit+0x50>)
  400ce6:	f000 f9b1 	bl	40104c <__retarget_lock_acquire_recursive>
  400cea:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  400cec:	b9d2      	cbnz	r2, 400d24 <__sinit+0x44>
  400cee:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  400cf2:	4810      	ldr	r0, [pc, #64]	; (400d34 <__sinit+0x54>)
  400cf4:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  400cf8:	2103      	movs	r1, #3
  400cfa:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  400cfe:	63e0      	str	r0, [r4, #60]	; 0x3c
  400d00:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  400d04:	6860      	ldr	r0, [r4, #4]
  400d06:	2104      	movs	r1, #4
  400d08:	f7ff ffc2 	bl	400c90 <std.isra.0>
  400d0c:	2201      	movs	r2, #1
  400d0e:	2109      	movs	r1, #9
  400d10:	68a0      	ldr	r0, [r4, #8]
  400d12:	f7ff ffbd 	bl	400c90 <std.isra.0>
  400d16:	2202      	movs	r2, #2
  400d18:	2112      	movs	r1, #18
  400d1a:	68e0      	ldr	r0, [r4, #12]
  400d1c:	f7ff ffb8 	bl	400c90 <std.isra.0>
  400d20:	2301      	movs	r3, #1
  400d22:	63a3      	str	r3, [r4, #56]	; 0x38
  400d24:	4802      	ldr	r0, [pc, #8]	; (400d30 <__sinit+0x50>)
  400d26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400d2a:	f000 b991 	b.w	401050 <__retarget_lock_release_recursive>
  400d2e:	bf00      	nop
  400d30:	200008b8 	.word	0x200008b8
  400d34:	00400c85 	.word	0x00400c85

00400d38 <__sfp_lock_acquire>:
  400d38:	4801      	ldr	r0, [pc, #4]	; (400d40 <__sfp_lock_acquire+0x8>)
  400d3a:	f000 b987 	b.w	40104c <__retarget_lock_acquire_recursive>
  400d3e:	bf00      	nop
  400d40:	200008cc 	.word	0x200008cc

00400d44 <__sfp_lock_release>:
  400d44:	4801      	ldr	r0, [pc, #4]	; (400d4c <__sfp_lock_release+0x8>)
  400d46:	f000 b983 	b.w	401050 <__retarget_lock_release_recursive>
  400d4a:	bf00      	nop
  400d4c:	200008cc 	.word	0x200008cc

00400d50 <__libc_fini_array>:
  400d50:	b538      	push	{r3, r4, r5, lr}
  400d52:	4c0a      	ldr	r4, [pc, #40]	; (400d7c <__libc_fini_array+0x2c>)
  400d54:	4d0a      	ldr	r5, [pc, #40]	; (400d80 <__libc_fini_array+0x30>)
  400d56:	1b64      	subs	r4, r4, r5
  400d58:	10a4      	asrs	r4, r4, #2
  400d5a:	d00a      	beq.n	400d72 <__libc_fini_array+0x22>
  400d5c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  400d60:	3b01      	subs	r3, #1
  400d62:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  400d66:	3c01      	subs	r4, #1
  400d68:	f855 3904 	ldr.w	r3, [r5], #-4
  400d6c:	4798      	blx	r3
  400d6e:	2c00      	cmp	r4, #0
  400d70:	d1f9      	bne.n	400d66 <__libc_fini_array+0x16>
  400d72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  400d76:	f000 bdfb 	b.w	401970 <_fini>
  400d7a:	bf00      	nop
  400d7c:	00401980 	.word	0x00401980
  400d80:	0040197c 	.word	0x0040197c

00400d84 <_malloc_trim_r>:
  400d84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400d86:	4f24      	ldr	r7, [pc, #144]	; (400e18 <_malloc_trim_r+0x94>)
  400d88:	460c      	mov	r4, r1
  400d8a:	4606      	mov	r6, r0
  400d8c:	f000 fc48 	bl	401620 <__malloc_lock>
  400d90:	68bb      	ldr	r3, [r7, #8]
  400d92:	685d      	ldr	r5, [r3, #4]
  400d94:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  400d98:	310f      	adds	r1, #15
  400d9a:	f025 0503 	bic.w	r5, r5, #3
  400d9e:	4429      	add	r1, r5
  400da0:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  400da4:	f021 010f 	bic.w	r1, r1, #15
  400da8:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  400dac:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  400db0:	db07      	blt.n	400dc2 <_malloc_trim_r+0x3e>
  400db2:	2100      	movs	r1, #0
  400db4:	4630      	mov	r0, r6
  400db6:	f000 fc3f 	bl	401638 <_sbrk_r>
  400dba:	68bb      	ldr	r3, [r7, #8]
  400dbc:	442b      	add	r3, r5
  400dbe:	4298      	cmp	r0, r3
  400dc0:	d004      	beq.n	400dcc <_malloc_trim_r+0x48>
  400dc2:	4630      	mov	r0, r6
  400dc4:	f000 fc32 	bl	40162c <__malloc_unlock>
  400dc8:	2000      	movs	r0, #0
  400dca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400dcc:	4261      	negs	r1, r4
  400dce:	4630      	mov	r0, r6
  400dd0:	f000 fc32 	bl	401638 <_sbrk_r>
  400dd4:	3001      	adds	r0, #1
  400dd6:	d00d      	beq.n	400df4 <_malloc_trim_r+0x70>
  400dd8:	4b10      	ldr	r3, [pc, #64]	; (400e1c <_malloc_trim_r+0x98>)
  400dda:	68ba      	ldr	r2, [r7, #8]
  400ddc:	6819      	ldr	r1, [r3, #0]
  400dde:	1b2d      	subs	r5, r5, r4
  400de0:	f045 0501 	orr.w	r5, r5, #1
  400de4:	4630      	mov	r0, r6
  400de6:	1b09      	subs	r1, r1, r4
  400de8:	6055      	str	r5, [r2, #4]
  400dea:	6019      	str	r1, [r3, #0]
  400dec:	f000 fc1e 	bl	40162c <__malloc_unlock>
  400df0:	2001      	movs	r0, #1
  400df2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400df4:	2100      	movs	r1, #0
  400df6:	4630      	mov	r0, r6
  400df8:	f000 fc1e 	bl	401638 <_sbrk_r>
  400dfc:	68ba      	ldr	r2, [r7, #8]
  400dfe:	1a83      	subs	r3, r0, r2
  400e00:	2b0f      	cmp	r3, #15
  400e02:	ddde      	ble.n	400dc2 <_malloc_trim_r+0x3e>
  400e04:	4c06      	ldr	r4, [pc, #24]	; (400e20 <_malloc_trim_r+0x9c>)
  400e06:	4905      	ldr	r1, [pc, #20]	; (400e1c <_malloc_trim_r+0x98>)
  400e08:	6824      	ldr	r4, [r4, #0]
  400e0a:	f043 0301 	orr.w	r3, r3, #1
  400e0e:	1b00      	subs	r0, r0, r4
  400e10:	6053      	str	r3, [r2, #4]
  400e12:	6008      	str	r0, [r1, #0]
  400e14:	e7d5      	b.n	400dc2 <_malloc_trim_r+0x3e>
  400e16:	bf00      	nop
  400e18:	2000043c 	.word	0x2000043c
  400e1c:	2000086c 	.word	0x2000086c
  400e20:	20000844 	.word	0x20000844

00400e24 <_free_r>:
  400e24:	2900      	cmp	r1, #0
  400e26:	d044      	beq.n	400eb2 <_free_r+0x8e>
  400e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e2c:	460d      	mov	r5, r1
  400e2e:	4680      	mov	r8, r0
  400e30:	f000 fbf6 	bl	401620 <__malloc_lock>
  400e34:	f855 7c04 	ldr.w	r7, [r5, #-4]
  400e38:	4969      	ldr	r1, [pc, #420]	; (400fe0 <_free_r+0x1bc>)
  400e3a:	f027 0301 	bic.w	r3, r7, #1
  400e3e:	f1a5 0408 	sub.w	r4, r5, #8
  400e42:	18e2      	adds	r2, r4, r3
  400e44:	688e      	ldr	r6, [r1, #8]
  400e46:	6850      	ldr	r0, [r2, #4]
  400e48:	42b2      	cmp	r2, r6
  400e4a:	f020 0003 	bic.w	r0, r0, #3
  400e4e:	d05e      	beq.n	400f0e <_free_r+0xea>
  400e50:	07fe      	lsls	r6, r7, #31
  400e52:	6050      	str	r0, [r2, #4]
  400e54:	d40b      	bmi.n	400e6e <_free_r+0x4a>
  400e56:	f855 7c08 	ldr.w	r7, [r5, #-8]
  400e5a:	1be4      	subs	r4, r4, r7
  400e5c:	f101 0e08 	add.w	lr, r1, #8
  400e60:	68a5      	ldr	r5, [r4, #8]
  400e62:	4575      	cmp	r5, lr
  400e64:	443b      	add	r3, r7
  400e66:	d06d      	beq.n	400f44 <_free_r+0x120>
  400e68:	68e7      	ldr	r7, [r4, #12]
  400e6a:	60ef      	str	r7, [r5, #12]
  400e6c:	60bd      	str	r5, [r7, #8]
  400e6e:	1815      	adds	r5, r2, r0
  400e70:	686d      	ldr	r5, [r5, #4]
  400e72:	07ed      	lsls	r5, r5, #31
  400e74:	d53e      	bpl.n	400ef4 <_free_r+0xd0>
  400e76:	f043 0201 	orr.w	r2, r3, #1
  400e7a:	6062      	str	r2, [r4, #4]
  400e7c:	50e3      	str	r3, [r4, r3]
  400e7e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  400e82:	d217      	bcs.n	400eb4 <_free_r+0x90>
  400e84:	08db      	lsrs	r3, r3, #3
  400e86:	1c58      	adds	r0, r3, #1
  400e88:	109a      	asrs	r2, r3, #2
  400e8a:	684d      	ldr	r5, [r1, #4]
  400e8c:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  400e90:	60a7      	str	r7, [r4, #8]
  400e92:	2301      	movs	r3, #1
  400e94:	4093      	lsls	r3, r2
  400e96:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  400e9a:	432b      	orrs	r3, r5
  400e9c:	3a08      	subs	r2, #8
  400e9e:	60e2      	str	r2, [r4, #12]
  400ea0:	604b      	str	r3, [r1, #4]
  400ea2:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  400ea6:	60fc      	str	r4, [r7, #12]
  400ea8:	4640      	mov	r0, r8
  400eaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  400eae:	f000 bbbd 	b.w	40162c <__malloc_unlock>
  400eb2:	4770      	bx	lr
  400eb4:	0a5a      	lsrs	r2, r3, #9
  400eb6:	2a04      	cmp	r2, #4
  400eb8:	d852      	bhi.n	400f60 <_free_r+0x13c>
  400eba:	099a      	lsrs	r2, r3, #6
  400ebc:	f102 0739 	add.w	r7, r2, #57	; 0x39
  400ec0:	00ff      	lsls	r7, r7, #3
  400ec2:	f102 0538 	add.w	r5, r2, #56	; 0x38
  400ec6:	19c8      	adds	r0, r1, r7
  400ec8:	59ca      	ldr	r2, [r1, r7]
  400eca:	3808      	subs	r0, #8
  400ecc:	4290      	cmp	r0, r2
  400ece:	d04f      	beq.n	400f70 <_free_r+0x14c>
  400ed0:	6851      	ldr	r1, [r2, #4]
  400ed2:	f021 0103 	bic.w	r1, r1, #3
  400ed6:	428b      	cmp	r3, r1
  400ed8:	d232      	bcs.n	400f40 <_free_r+0x11c>
  400eda:	6892      	ldr	r2, [r2, #8]
  400edc:	4290      	cmp	r0, r2
  400ede:	d1f7      	bne.n	400ed0 <_free_r+0xac>
  400ee0:	68c3      	ldr	r3, [r0, #12]
  400ee2:	60a0      	str	r0, [r4, #8]
  400ee4:	60e3      	str	r3, [r4, #12]
  400ee6:	609c      	str	r4, [r3, #8]
  400ee8:	60c4      	str	r4, [r0, #12]
  400eea:	4640      	mov	r0, r8
  400eec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  400ef0:	f000 bb9c 	b.w	40162c <__malloc_unlock>
  400ef4:	6895      	ldr	r5, [r2, #8]
  400ef6:	4f3b      	ldr	r7, [pc, #236]	; (400fe4 <_free_r+0x1c0>)
  400ef8:	42bd      	cmp	r5, r7
  400efa:	4403      	add	r3, r0
  400efc:	d040      	beq.n	400f80 <_free_r+0x15c>
  400efe:	68d0      	ldr	r0, [r2, #12]
  400f00:	60e8      	str	r0, [r5, #12]
  400f02:	f043 0201 	orr.w	r2, r3, #1
  400f06:	6085      	str	r5, [r0, #8]
  400f08:	6062      	str	r2, [r4, #4]
  400f0a:	50e3      	str	r3, [r4, r3]
  400f0c:	e7b7      	b.n	400e7e <_free_r+0x5a>
  400f0e:	07ff      	lsls	r7, r7, #31
  400f10:	4403      	add	r3, r0
  400f12:	d407      	bmi.n	400f24 <_free_r+0x100>
  400f14:	f855 2c08 	ldr.w	r2, [r5, #-8]
  400f18:	1aa4      	subs	r4, r4, r2
  400f1a:	4413      	add	r3, r2
  400f1c:	68a0      	ldr	r0, [r4, #8]
  400f1e:	68e2      	ldr	r2, [r4, #12]
  400f20:	60c2      	str	r2, [r0, #12]
  400f22:	6090      	str	r0, [r2, #8]
  400f24:	4a30      	ldr	r2, [pc, #192]	; (400fe8 <_free_r+0x1c4>)
  400f26:	6812      	ldr	r2, [r2, #0]
  400f28:	f043 0001 	orr.w	r0, r3, #1
  400f2c:	4293      	cmp	r3, r2
  400f2e:	6060      	str	r0, [r4, #4]
  400f30:	608c      	str	r4, [r1, #8]
  400f32:	d3b9      	bcc.n	400ea8 <_free_r+0x84>
  400f34:	4b2d      	ldr	r3, [pc, #180]	; (400fec <_free_r+0x1c8>)
  400f36:	4640      	mov	r0, r8
  400f38:	6819      	ldr	r1, [r3, #0]
  400f3a:	f7ff ff23 	bl	400d84 <_malloc_trim_r>
  400f3e:	e7b3      	b.n	400ea8 <_free_r+0x84>
  400f40:	4610      	mov	r0, r2
  400f42:	e7cd      	b.n	400ee0 <_free_r+0xbc>
  400f44:	1811      	adds	r1, r2, r0
  400f46:	6849      	ldr	r1, [r1, #4]
  400f48:	07c9      	lsls	r1, r1, #31
  400f4a:	d444      	bmi.n	400fd6 <_free_r+0x1b2>
  400f4c:	6891      	ldr	r1, [r2, #8]
  400f4e:	68d2      	ldr	r2, [r2, #12]
  400f50:	60ca      	str	r2, [r1, #12]
  400f52:	4403      	add	r3, r0
  400f54:	f043 0001 	orr.w	r0, r3, #1
  400f58:	6091      	str	r1, [r2, #8]
  400f5a:	6060      	str	r0, [r4, #4]
  400f5c:	50e3      	str	r3, [r4, r3]
  400f5e:	e7a3      	b.n	400ea8 <_free_r+0x84>
  400f60:	2a14      	cmp	r2, #20
  400f62:	d816      	bhi.n	400f92 <_free_r+0x16e>
  400f64:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  400f68:	00ff      	lsls	r7, r7, #3
  400f6a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  400f6e:	e7aa      	b.n	400ec6 <_free_r+0xa2>
  400f70:	10aa      	asrs	r2, r5, #2
  400f72:	2301      	movs	r3, #1
  400f74:	684d      	ldr	r5, [r1, #4]
  400f76:	4093      	lsls	r3, r2
  400f78:	432b      	orrs	r3, r5
  400f7a:	604b      	str	r3, [r1, #4]
  400f7c:	4603      	mov	r3, r0
  400f7e:	e7b0      	b.n	400ee2 <_free_r+0xbe>
  400f80:	f043 0201 	orr.w	r2, r3, #1
  400f84:	614c      	str	r4, [r1, #20]
  400f86:	610c      	str	r4, [r1, #16]
  400f88:	60e5      	str	r5, [r4, #12]
  400f8a:	60a5      	str	r5, [r4, #8]
  400f8c:	6062      	str	r2, [r4, #4]
  400f8e:	50e3      	str	r3, [r4, r3]
  400f90:	e78a      	b.n	400ea8 <_free_r+0x84>
  400f92:	2a54      	cmp	r2, #84	; 0x54
  400f94:	d806      	bhi.n	400fa4 <_free_r+0x180>
  400f96:	0b1a      	lsrs	r2, r3, #12
  400f98:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  400f9c:	00ff      	lsls	r7, r7, #3
  400f9e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  400fa2:	e790      	b.n	400ec6 <_free_r+0xa2>
  400fa4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  400fa8:	d806      	bhi.n	400fb8 <_free_r+0x194>
  400faa:	0bda      	lsrs	r2, r3, #15
  400fac:	f102 0778 	add.w	r7, r2, #120	; 0x78
  400fb0:	00ff      	lsls	r7, r7, #3
  400fb2:	f102 0577 	add.w	r5, r2, #119	; 0x77
  400fb6:	e786      	b.n	400ec6 <_free_r+0xa2>
  400fb8:	f240 5054 	movw	r0, #1364	; 0x554
  400fbc:	4282      	cmp	r2, r0
  400fbe:	d806      	bhi.n	400fce <_free_r+0x1aa>
  400fc0:	0c9a      	lsrs	r2, r3, #18
  400fc2:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  400fc6:	00ff      	lsls	r7, r7, #3
  400fc8:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  400fcc:	e77b      	b.n	400ec6 <_free_r+0xa2>
  400fce:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  400fd2:	257e      	movs	r5, #126	; 0x7e
  400fd4:	e777      	b.n	400ec6 <_free_r+0xa2>
  400fd6:	f043 0101 	orr.w	r1, r3, #1
  400fda:	6061      	str	r1, [r4, #4]
  400fdc:	6013      	str	r3, [r2, #0]
  400fde:	e763      	b.n	400ea8 <_free_r+0x84>
  400fe0:	2000043c 	.word	0x2000043c
  400fe4:	20000444 	.word	0x20000444
  400fe8:	20000848 	.word	0x20000848
  400fec:	2000089c 	.word	0x2000089c

00400ff0 <_fwalk_reent>:
  400ff0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400ff4:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  400ff8:	d01f      	beq.n	40103a <_fwalk_reent+0x4a>
  400ffa:	4688      	mov	r8, r1
  400ffc:	4606      	mov	r6, r0
  400ffe:	f04f 0900 	mov.w	r9, #0
  401002:	687d      	ldr	r5, [r7, #4]
  401004:	68bc      	ldr	r4, [r7, #8]
  401006:	3d01      	subs	r5, #1
  401008:	d411      	bmi.n	40102e <_fwalk_reent+0x3e>
  40100a:	89a3      	ldrh	r3, [r4, #12]
  40100c:	2b01      	cmp	r3, #1
  40100e:	f105 35ff 	add.w	r5, r5, #4294967295
  401012:	d908      	bls.n	401026 <_fwalk_reent+0x36>
  401014:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  401018:	3301      	adds	r3, #1
  40101a:	4621      	mov	r1, r4
  40101c:	4630      	mov	r0, r6
  40101e:	d002      	beq.n	401026 <_fwalk_reent+0x36>
  401020:	47c0      	blx	r8
  401022:	ea49 0900 	orr.w	r9, r9, r0
  401026:	1c6b      	adds	r3, r5, #1
  401028:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40102c:	d1ed      	bne.n	40100a <_fwalk_reent+0x1a>
  40102e:	683f      	ldr	r7, [r7, #0]
  401030:	2f00      	cmp	r7, #0
  401032:	d1e6      	bne.n	401002 <_fwalk_reent+0x12>
  401034:	4648      	mov	r0, r9
  401036:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40103a:	46b9      	mov	r9, r7
  40103c:	4648      	mov	r0, r9
  40103e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401042:	bf00      	nop

00401044 <__retarget_lock_init_recursive>:
  401044:	4770      	bx	lr
  401046:	bf00      	nop

00401048 <__retarget_lock_close_recursive>:
  401048:	4770      	bx	lr
  40104a:	bf00      	nop

0040104c <__retarget_lock_acquire_recursive>:
  40104c:	4770      	bx	lr
  40104e:	bf00      	nop

00401050 <__retarget_lock_release_recursive>:
  401050:	4770      	bx	lr
  401052:	bf00      	nop

00401054 <__swhatbuf_r>:
  401054:	b570      	push	{r4, r5, r6, lr}
  401056:	460c      	mov	r4, r1
  401058:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40105c:	2900      	cmp	r1, #0
  40105e:	b090      	sub	sp, #64	; 0x40
  401060:	4615      	mov	r5, r2
  401062:	461e      	mov	r6, r3
  401064:	db14      	blt.n	401090 <__swhatbuf_r+0x3c>
  401066:	aa01      	add	r2, sp, #4
  401068:	f000 fc28 	bl	4018bc <_fstat_r>
  40106c:	2800      	cmp	r0, #0
  40106e:	db0f      	blt.n	401090 <__swhatbuf_r+0x3c>
  401070:	9a02      	ldr	r2, [sp, #8]
  401072:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  401076:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  40107a:	fab2 f282 	clz	r2, r2
  40107e:	0952      	lsrs	r2, r2, #5
  401080:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401084:	f44f 6000 	mov.w	r0, #2048	; 0x800
  401088:	6032      	str	r2, [r6, #0]
  40108a:	602b      	str	r3, [r5, #0]
  40108c:	b010      	add	sp, #64	; 0x40
  40108e:	bd70      	pop	{r4, r5, r6, pc}
  401090:	89a2      	ldrh	r2, [r4, #12]
  401092:	2300      	movs	r3, #0
  401094:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  401098:	6033      	str	r3, [r6, #0]
  40109a:	d004      	beq.n	4010a6 <__swhatbuf_r+0x52>
  40109c:	2240      	movs	r2, #64	; 0x40
  40109e:	4618      	mov	r0, r3
  4010a0:	602a      	str	r2, [r5, #0]
  4010a2:	b010      	add	sp, #64	; 0x40
  4010a4:	bd70      	pop	{r4, r5, r6, pc}
  4010a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4010aa:	602b      	str	r3, [r5, #0]
  4010ac:	b010      	add	sp, #64	; 0x40
  4010ae:	bd70      	pop	{r4, r5, r6, pc}

004010b0 <malloc>:
  4010b0:	4b02      	ldr	r3, [pc, #8]	; (4010bc <malloc+0xc>)
  4010b2:	4601      	mov	r1, r0
  4010b4:	6818      	ldr	r0, [r3, #0]
  4010b6:	f000 b803 	b.w	4010c0 <_malloc_r>
  4010ba:	bf00      	nop
  4010bc:	20000008 	.word	0x20000008

004010c0 <_malloc_r>:
  4010c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4010c4:	f101 060b 	add.w	r6, r1, #11
  4010c8:	2e16      	cmp	r6, #22
  4010ca:	b083      	sub	sp, #12
  4010cc:	4605      	mov	r5, r0
  4010ce:	f240 809e 	bls.w	40120e <_malloc_r+0x14e>
  4010d2:	f036 0607 	bics.w	r6, r6, #7
  4010d6:	f100 80bd 	bmi.w	401254 <_malloc_r+0x194>
  4010da:	42b1      	cmp	r1, r6
  4010dc:	f200 80ba 	bhi.w	401254 <_malloc_r+0x194>
  4010e0:	f000 fa9e 	bl	401620 <__malloc_lock>
  4010e4:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4010e8:	f0c0 8293 	bcc.w	401612 <_malloc_r+0x552>
  4010ec:	0a73      	lsrs	r3, r6, #9
  4010ee:	f000 80b8 	beq.w	401262 <_malloc_r+0x1a2>
  4010f2:	2b04      	cmp	r3, #4
  4010f4:	f200 8179 	bhi.w	4013ea <_malloc_r+0x32a>
  4010f8:	09b3      	lsrs	r3, r6, #6
  4010fa:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4010fe:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  401102:	00c3      	lsls	r3, r0, #3
  401104:	4fbf      	ldr	r7, [pc, #764]	; (401404 <_malloc_r+0x344>)
  401106:	443b      	add	r3, r7
  401108:	f1a3 0108 	sub.w	r1, r3, #8
  40110c:	685c      	ldr	r4, [r3, #4]
  40110e:	42a1      	cmp	r1, r4
  401110:	d106      	bne.n	401120 <_malloc_r+0x60>
  401112:	e00c      	b.n	40112e <_malloc_r+0x6e>
  401114:	2a00      	cmp	r2, #0
  401116:	f280 80aa 	bge.w	40126e <_malloc_r+0x1ae>
  40111a:	68e4      	ldr	r4, [r4, #12]
  40111c:	42a1      	cmp	r1, r4
  40111e:	d006      	beq.n	40112e <_malloc_r+0x6e>
  401120:	6863      	ldr	r3, [r4, #4]
  401122:	f023 0303 	bic.w	r3, r3, #3
  401126:	1b9a      	subs	r2, r3, r6
  401128:	2a0f      	cmp	r2, #15
  40112a:	ddf3      	ble.n	401114 <_malloc_r+0x54>
  40112c:	4670      	mov	r0, lr
  40112e:	693c      	ldr	r4, [r7, #16]
  401130:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 401418 <_malloc_r+0x358>
  401134:	4574      	cmp	r4, lr
  401136:	f000 81ab 	beq.w	401490 <_malloc_r+0x3d0>
  40113a:	6863      	ldr	r3, [r4, #4]
  40113c:	f023 0303 	bic.w	r3, r3, #3
  401140:	1b9a      	subs	r2, r3, r6
  401142:	2a0f      	cmp	r2, #15
  401144:	f300 8190 	bgt.w	401468 <_malloc_r+0x3a8>
  401148:	2a00      	cmp	r2, #0
  40114a:	f8c7 e014 	str.w	lr, [r7, #20]
  40114e:	f8c7 e010 	str.w	lr, [r7, #16]
  401152:	f280 809d 	bge.w	401290 <_malloc_r+0x1d0>
  401156:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40115a:	f080 8161 	bcs.w	401420 <_malloc_r+0x360>
  40115e:	08db      	lsrs	r3, r3, #3
  401160:	f103 0c01 	add.w	ip, r3, #1
  401164:	1099      	asrs	r1, r3, #2
  401166:	687a      	ldr	r2, [r7, #4]
  401168:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  40116c:	f8c4 8008 	str.w	r8, [r4, #8]
  401170:	2301      	movs	r3, #1
  401172:	408b      	lsls	r3, r1
  401174:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  401178:	4313      	orrs	r3, r2
  40117a:	3908      	subs	r1, #8
  40117c:	60e1      	str	r1, [r4, #12]
  40117e:	607b      	str	r3, [r7, #4]
  401180:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  401184:	f8c8 400c 	str.w	r4, [r8, #12]
  401188:	1082      	asrs	r2, r0, #2
  40118a:	2401      	movs	r4, #1
  40118c:	4094      	lsls	r4, r2
  40118e:	429c      	cmp	r4, r3
  401190:	f200 808b 	bhi.w	4012aa <_malloc_r+0x1ea>
  401194:	421c      	tst	r4, r3
  401196:	d106      	bne.n	4011a6 <_malloc_r+0xe6>
  401198:	f020 0003 	bic.w	r0, r0, #3
  40119c:	0064      	lsls	r4, r4, #1
  40119e:	421c      	tst	r4, r3
  4011a0:	f100 0004 	add.w	r0, r0, #4
  4011a4:	d0fa      	beq.n	40119c <_malloc_r+0xdc>
  4011a6:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4011aa:	46cc      	mov	ip, r9
  4011ac:	4680      	mov	r8, r0
  4011ae:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4011b2:	459c      	cmp	ip, r3
  4011b4:	d107      	bne.n	4011c6 <_malloc_r+0x106>
  4011b6:	e16d      	b.n	401494 <_malloc_r+0x3d4>
  4011b8:	2a00      	cmp	r2, #0
  4011ba:	f280 817b 	bge.w	4014b4 <_malloc_r+0x3f4>
  4011be:	68db      	ldr	r3, [r3, #12]
  4011c0:	459c      	cmp	ip, r3
  4011c2:	f000 8167 	beq.w	401494 <_malloc_r+0x3d4>
  4011c6:	6859      	ldr	r1, [r3, #4]
  4011c8:	f021 0103 	bic.w	r1, r1, #3
  4011cc:	1b8a      	subs	r2, r1, r6
  4011ce:	2a0f      	cmp	r2, #15
  4011d0:	ddf2      	ble.n	4011b8 <_malloc_r+0xf8>
  4011d2:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4011d6:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4011da:	9300      	str	r3, [sp, #0]
  4011dc:	199c      	adds	r4, r3, r6
  4011de:	4628      	mov	r0, r5
  4011e0:	f046 0601 	orr.w	r6, r6, #1
  4011e4:	f042 0501 	orr.w	r5, r2, #1
  4011e8:	605e      	str	r6, [r3, #4]
  4011ea:	f8c8 c00c 	str.w	ip, [r8, #12]
  4011ee:	f8cc 8008 	str.w	r8, [ip, #8]
  4011f2:	617c      	str	r4, [r7, #20]
  4011f4:	613c      	str	r4, [r7, #16]
  4011f6:	f8c4 e00c 	str.w	lr, [r4, #12]
  4011fa:	f8c4 e008 	str.w	lr, [r4, #8]
  4011fe:	6065      	str	r5, [r4, #4]
  401200:	505a      	str	r2, [r3, r1]
  401202:	f000 fa13 	bl	40162c <__malloc_unlock>
  401206:	9b00      	ldr	r3, [sp, #0]
  401208:	f103 0408 	add.w	r4, r3, #8
  40120c:	e01e      	b.n	40124c <_malloc_r+0x18c>
  40120e:	2910      	cmp	r1, #16
  401210:	d820      	bhi.n	401254 <_malloc_r+0x194>
  401212:	f000 fa05 	bl	401620 <__malloc_lock>
  401216:	2610      	movs	r6, #16
  401218:	2318      	movs	r3, #24
  40121a:	2002      	movs	r0, #2
  40121c:	4f79      	ldr	r7, [pc, #484]	; (401404 <_malloc_r+0x344>)
  40121e:	443b      	add	r3, r7
  401220:	f1a3 0208 	sub.w	r2, r3, #8
  401224:	685c      	ldr	r4, [r3, #4]
  401226:	4294      	cmp	r4, r2
  401228:	f000 813d 	beq.w	4014a6 <_malloc_r+0x3e6>
  40122c:	6863      	ldr	r3, [r4, #4]
  40122e:	68e1      	ldr	r1, [r4, #12]
  401230:	68a6      	ldr	r6, [r4, #8]
  401232:	f023 0303 	bic.w	r3, r3, #3
  401236:	4423      	add	r3, r4
  401238:	4628      	mov	r0, r5
  40123a:	685a      	ldr	r2, [r3, #4]
  40123c:	60f1      	str	r1, [r6, #12]
  40123e:	f042 0201 	orr.w	r2, r2, #1
  401242:	608e      	str	r6, [r1, #8]
  401244:	605a      	str	r2, [r3, #4]
  401246:	f000 f9f1 	bl	40162c <__malloc_unlock>
  40124a:	3408      	adds	r4, #8
  40124c:	4620      	mov	r0, r4
  40124e:	b003      	add	sp, #12
  401250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401254:	2400      	movs	r4, #0
  401256:	230c      	movs	r3, #12
  401258:	4620      	mov	r0, r4
  40125a:	602b      	str	r3, [r5, #0]
  40125c:	b003      	add	sp, #12
  40125e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401262:	2040      	movs	r0, #64	; 0x40
  401264:	f44f 7300 	mov.w	r3, #512	; 0x200
  401268:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  40126c:	e74a      	b.n	401104 <_malloc_r+0x44>
  40126e:	4423      	add	r3, r4
  401270:	68e1      	ldr	r1, [r4, #12]
  401272:	685a      	ldr	r2, [r3, #4]
  401274:	68a6      	ldr	r6, [r4, #8]
  401276:	f042 0201 	orr.w	r2, r2, #1
  40127a:	60f1      	str	r1, [r6, #12]
  40127c:	4628      	mov	r0, r5
  40127e:	608e      	str	r6, [r1, #8]
  401280:	605a      	str	r2, [r3, #4]
  401282:	f000 f9d3 	bl	40162c <__malloc_unlock>
  401286:	3408      	adds	r4, #8
  401288:	4620      	mov	r0, r4
  40128a:	b003      	add	sp, #12
  40128c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401290:	4423      	add	r3, r4
  401292:	4628      	mov	r0, r5
  401294:	685a      	ldr	r2, [r3, #4]
  401296:	f042 0201 	orr.w	r2, r2, #1
  40129a:	605a      	str	r2, [r3, #4]
  40129c:	f000 f9c6 	bl	40162c <__malloc_unlock>
  4012a0:	3408      	adds	r4, #8
  4012a2:	4620      	mov	r0, r4
  4012a4:	b003      	add	sp, #12
  4012a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4012aa:	68bc      	ldr	r4, [r7, #8]
  4012ac:	6863      	ldr	r3, [r4, #4]
  4012ae:	f023 0803 	bic.w	r8, r3, #3
  4012b2:	45b0      	cmp	r8, r6
  4012b4:	d304      	bcc.n	4012c0 <_malloc_r+0x200>
  4012b6:	eba8 0306 	sub.w	r3, r8, r6
  4012ba:	2b0f      	cmp	r3, #15
  4012bc:	f300 8085 	bgt.w	4013ca <_malloc_r+0x30a>
  4012c0:	f8df 9158 	ldr.w	r9, [pc, #344]	; 40141c <_malloc_r+0x35c>
  4012c4:	4b50      	ldr	r3, [pc, #320]	; (401408 <_malloc_r+0x348>)
  4012c6:	f8d9 2000 	ldr.w	r2, [r9]
  4012ca:	681b      	ldr	r3, [r3, #0]
  4012cc:	3201      	adds	r2, #1
  4012ce:	4433      	add	r3, r6
  4012d0:	eb04 0a08 	add.w	sl, r4, r8
  4012d4:	f000 8155 	beq.w	401582 <_malloc_r+0x4c2>
  4012d8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4012dc:	330f      	adds	r3, #15
  4012de:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4012e2:	f02b 0b0f 	bic.w	fp, fp, #15
  4012e6:	4659      	mov	r1, fp
  4012e8:	4628      	mov	r0, r5
  4012ea:	f000 f9a5 	bl	401638 <_sbrk_r>
  4012ee:	1c41      	adds	r1, r0, #1
  4012f0:	4602      	mov	r2, r0
  4012f2:	f000 80fc 	beq.w	4014ee <_malloc_r+0x42e>
  4012f6:	4582      	cmp	sl, r0
  4012f8:	f200 80f7 	bhi.w	4014ea <_malloc_r+0x42a>
  4012fc:	4b43      	ldr	r3, [pc, #268]	; (40140c <_malloc_r+0x34c>)
  4012fe:	6819      	ldr	r1, [r3, #0]
  401300:	4459      	add	r1, fp
  401302:	6019      	str	r1, [r3, #0]
  401304:	f000 814d 	beq.w	4015a2 <_malloc_r+0x4e2>
  401308:	f8d9 0000 	ldr.w	r0, [r9]
  40130c:	3001      	adds	r0, #1
  40130e:	bf1b      	ittet	ne
  401310:	eba2 0a0a 	subne.w	sl, r2, sl
  401314:	4451      	addne	r1, sl
  401316:	f8c9 2000 	streq.w	r2, [r9]
  40131a:	6019      	strne	r1, [r3, #0]
  40131c:	f012 0107 	ands.w	r1, r2, #7
  401320:	f000 8115 	beq.w	40154e <_malloc_r+0x48e>
  401324:	f1c1 0008 	rsb	r0, r1, #8
  401328:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  40132c:	4402      	add	r2, r0
  40132e:	3108      	adds	r1, #8
  401330:	eb02 090b 	add.w	r9, r2, fp
  401334:	f3c9 090b 	ubfx	r9, r9, #0, #12
  401338:	eba1 0909 	sub.w	r9, r1, r9
  40133c:	4649      	mov	r1, r9
  40133e:	4628      	mov	r0, r5
  401340:	9301      	str	r3, [sp, #4]
  401342:	9200      	str	r2, [sp, #0]
  401344:	f000 f978 	bl	401638 <_sbrk_r>
  401348:	1c43      	adds	r3, r0, #1
  40134a:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40134e:	f000 8143 	beq.w	4015d8 <_malloc_r+0x518>
  401352:	1a80      	subs	r0, r0, r2
  401354:	4448      	add	r0, r9
  401356:	f040 0001 	orr.w	r0, r0, #1
  40135a:	6819      	ldr	r1, [r3, #0]
  40135c:	60ba      	str	r2, [r7, #8]
  40135e:	4449      	add	r1, r9
  401360:	42bc      	cmp	r4, r7
  401362:	6050      	str	r0, [r2, #4]
  401364:	6019      	str	r1, [r3, #0]
  401366:	d017      	beq.n	401398 <_malloc_r+0x2d8>
  401368:	f1b8 0f0f 	cmp.w	r8, #15
  40136c:	f240 80fb 	bls.w	401566 <_malloc_r+0x4a6>
  401370:	6860      	ldr	r0, [r4, #4]
  401372:	f1a8 020c 	sub.w	r2, r8, #12
  401376:	f022 0207 	bic.w	r2, r2, #7
  40137a:	eb04 0e02 	add.w	lr, r4, r2
  40137e:	f000 0001 	and.w	r0, r0, #1
  401382:	f04f 0c05 	mov.w	ip, #5
  401386:	4310      	orrs	r0, r2
  401388:	2a0f      	cmp	r2, #15
  40138a:	6060      	str	r0, [r4, #4]
  40138c:	f8ce c004 	str.w	ip, [lr, #4]
  401390:	f8ce c008 	str.w	ip, [lr, #8]
  401394:	f200 8117 	bhi.w	4015c6 <_malloc_r+0x506>
  401398:	4b1d      	ldr	r3, [pc, #116]	; (401410 <_malloc_r+0x350>)
  40139a:	68bc      	ldr	r4, [r7, #8]
  40139c:	681a      	ldr	r2, [r3, #0]
  40139e:	4291      	cmp	r1, r2
  4013a0:	bf88      	it	hi
  4013a2:	6019      	strhi	r1, [r3, #0]
  4013a4:	4b1b      	ldr	r3, [pc, #108]	; (401414 <_malloc_r+0x354>)
  4013a6:	681a      	ldr	r2, [r3, #0]
  4013a8:	4291      	cmp	r1, r2
  4013aa:	6862      	ldr	r2, [r4, #4]
  4013ac:	bf88      	it	hi
  4013ae:	6019      	strhi	r1, [r3, #0]
  4013b0:	f022 0203 	bic.w	r2, r2, #3
  4013b4:	4296      	cmp	r6, r2
  4013b6:	eba2 0306 	sub.w	r3, r2, r6
  4013ba:	d801      	bhi.n	4013c0 <_malloc_r+0x300>
  4013bc:	2b0f      	cmp	r3, #15
  4013be:	dc04      	bgt.n	4013ca <_malloc_r+0x30a>
  4013c0:	4628      	mov	r0, r5
  4013c2:	f000 f933 	bl	40162c <__malloc_unlock>
  4013c6:	2400      	movs	r4, #0
  4013c8:	e740      	b.n	40124c <_malloc_r+0x18c>
  4013ca:	19a2      	adds	r2, r4, r6
  4013cc:	f043 0301 	orr.w	r3, r3, #1
  4013d0:	f046 0601 	orr.w	r6, r6, #1
  4013d4:	6066      	str	r6, [r4, #4]
  4013d6:	4628      	mov	r0, r5
  4013d8:	60ba      	str	r2, [r7, #8]
  4013da:	6053      	str	r3, [r2, #4]
  4013dc:	f000 f926 	bl	40162c <__malloc_unlock>
  4013e0:	3408      	adds	r4, #8
  4013e2:	4620      	mov	r0, r4
  4013e4:	b003      	add	sp, #12
  4013e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4013ea:	2b14      	cmp	r3, #20
  4013ec:	d971      	bls.n	4014d2 <_malloc_r+0x412>
  4013ee:	2b54      	cmp	r3, #84	; 0x54
  4013f0:	f200 80a3 	bhi.w	40153a <_malloc_r+0x47a>
  4013f4:	0b33      	lsrs	r3, r6, #12
  4013f6:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4013fa:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4013fe:	00c3      	lsls	r3, r0, #3
  401400:	e680      	b.n	401104 <_malloc_r+0x44>
  401402:	bf00      	nop
  401404:	2000043c 	.word	0x2000043c
  401408:	2000089c 	.word	0x2000089c
  40140c:	2000086c 	.word	0x2000086c
  401410:	20000894 	.word	0x20000894
  401414:	20000898 	.word	0x20000898
  401418:	20000444 	.word	0x20000444
  40141c:	20000844 	.word	0x20000844
  401420:	0a5a      	lsrs	r2, r3, #9
  401422:	2a04      	cmp	r2, #4
  401424:	d95b      	bls.n	4014de <_malloc_r+0x41e>
  401426:	2a14      	cmp	r2, #20
  401428:	f200 80ae 	bhi.w	401588 <_malloc_r+0x4c8>
  40142c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  401430:	00c9      	lsls	r1, r1, #3
  401432:	325b      	adds	r2, #91	; 0x5b
  401434:	eb07 0c01 	add.w	ip, r7, r1
  401438:	5879      	ldr	r1, [r7, r1]
  40143a:	f1ac 0c08 	sub.w	ip, ip, #8
  40143e:	458c      	cmp	ip, r1
  401440:	f000 8088 	beq.w	401554 <_malloc_r+0x494>
  401444:	684a      	ldr	r2, [r1, #4]
  401446:	f022 0203 	bic.w	r2, r2, #3
  40144a:	4293      	cmp	r3, r2
  40144c:	d273      	bcs.n	401536 <_malloc_r+0x476>
  40144e:	6889      	ldr	r1, [r1, #8]
  401450:	458c      	cmp	ip, r1
  401452:	d1f7      	bne.n	401444 <_malloc_r+0x384>
  401454:	f8dc 200c 	ldr.w	r2, [ip, #12]
  401458:	687b      	ldr	r3, [r7, #4]
  40145a:	60e2      	str	r2, [r4, #12]
  40145c:	f8c4 c008 	str.w	ip, [r4, #8]
  401460:	6094      	str	r4, [r2, #8]
  401462:	f8cc 400c 	str.w	r4, [ip, #12]
  401466:	e68f      	b.n	401188 <_malloc_r+0xc8>
  401468:	19a1      	adds	r1, r4, r6
  40146a:	f046 0c01 	orr.w	ip, r6, #1
  40146e:	f042 0601 	orr.w	r6, r2, #1
  401472:	f8c4 c004 	str.w	ip, [r4, #4]
  401476:	4628      	mov	r0, r5
  401478:	6179      	str	r1, [r7, #20]
  40147a:	6139      	str	r1, [r7, #16]
  40147c:	f8c1 e00c 	str.w	lr, [r1, #12]
  401480:	f8c1 e008 	str.w	lr, [r1, #8]
  401484:	604e      	str	r6, [r1, #4]
  401486:	50e2      	str	r2, [r4, r3]
  401488:	f000 f8d0 	bl	40162c <__malloc_unlock>
  40148c:	3408      	adds	r4, #8
  40148e:	e6dd      	b.n	40124c <_malloc_r+0x18c>
  401490:	687b      	ldr	r3, [r7, #4]
  401492:	e679      	b.n	401188 <_malloc_r+0xc8>
  401494:	f108 0801 	add.w	r8, r8, #1
  401498:	f018 0f03 	tst.w	r8, #3
  40149c:	f10c 0c08 	add.w	ip, ip, #8
  4014a0:	f47f ae85 	bne.w	4011ae <_malloc_r+0xee>
  4014a4:	e02d      	b.n	401502 <_malloc_r+0x442>
  4014a6:	68dc      	ldr	r4, [r3, #12]
  4014a8:	42a3      	cmp	r3, r4
  4014aa:	bf08      	it	eq
  4014ac:	3002      	addeq	r0, #2
  4014ae:	f43f ae3e 	beq.w	40112e <_malloc_r+0x6e>
  4014b2:	e6bb      	b.n	40122c <_malloc_r+0x16c>
  4014b4:	4419      	add	r1, r3
  4014b6:	461c      	mov	r4, r3
  4014b8:	684a      	ldr	r2, [r1, #4]
  4014ba:	68db      	ldr	r3, [r3, #12]
  4014bc:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4014c0:	f042 0201 	orr.w	r2, r2, #1
  4014c4:	604a      	str	r2, [r1, #4]
  4014c6:	4628      	mov	r0, r5
  4014c8:	60f3      	str	r3, [r6, #12]
  4014ca:	609e      	str	r6, [r3, #8]
  4014cc:	f000 f8ae 	bl	40162c <__malloc_unlock>
  4014d0:	e6bc      	b.n	40124c <_malloc_r+0x18c>
  4014d2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4014d6:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4014da:	00c3      	lsls	r3, r0, #3
  4014dc:	e612      	b.n	401104 <_malloc_r+0x44>
  4014de:	099a      	lsrs	r2, r3, #6
  4014e0:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4014e4:	00c9      	lsls	r1, r1, #3
  4014e6:	3238      	adds	r2, #56	; 0x38
  4014e8:	e7a4      	b.n	401434 <_malloc_r+0x374>
  4014ea:	42bc      	cmp	r4, r7
  4014ec:	d054      	beq.n	401598 <_malloc_r+0x4d8>
  4014ee:	68bc      	ldr	r4, [r7, #8]
  4014f0:	6862      	ldr	r2, [r4, #4]
  4014f2:	f022 0203 	bic.w	r2, r2, #3
  4014f6:	e75d      	b.n	4013b4 <_malloc_r+0x2f4>
  4014f8:	f859 3908 	ldr.w	r3, [r9], #-8
  4014fc:	4599      	cmp	r9, r3
  4014fe:	f040 8086 	bne.w	40160e <_malloc_r+0x54e>
  401502:	f010 0f03 	tst.w	r0, #3
  401506:	f100 30ff 	add.w	r0, r0, #4294967295
  40150a:	d1f5      	bne.n	4014f8 <_malloc_r+0x438>
  40150c:	687b      	ldr	r3, [r7, #4]
  40150e:	ea23 0304 	bic.w	r3, r3, r4
  401512:	607b      	str	r3, [r7, #4]
  401514:	0064      	lsls	r4, r4, #1
  401516:	429c      	cmp	r4, r3
  401518:	f63f aec7 	bhi.w	4012aa <_malloc_r+0x1ea>
  40151c:	2c00      	cmp	r4, #0
  40151e:	f43f aec4 	beq.w	4012aa <_malloc_r+0x1ea>
  401522:	421c      	tst	r4, r3
  401524:	4640      	mov	r0, r8
  401526:	f47f ae3e 	bne.w	4011a6 <_malloc_r+0xe6>
  40152a:	0064      	lsls	r4, r4, #1
  40152c:	421c      	tst	r4, r3
  40152e:	f100 0004 	add.w	r0, r0, #4
  401532:	d0fa      	beq.n	40152a <_malloc_r+0x46a>
  401534:	e637      	b.n	4011a6 <_malloc_r+0xe6>
  401536:	468c      	mov	ip, r1
  401538:	e78c      	b.n	401454 <_malloc_r+0x394>
  40153a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40153e:	d815      	bhi.n	40156c <_malloc_r+0x4ac>
  401540:	0bf3      	lsrs	r3, r6, #15
  401542:	f103 0078 	add.w	r0, r3, #120	; 0x78
  401546:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40154a:	00c3      	lsls	r3, r0, #3
  40154c:	e5da      	b.n	401104 <_malloc_r+0x44>
  40154e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  401552:	e6ed      	b.n	401330 <_malloc_r+0x270>
  401554:	687b      	ldr	r3, [r7, #4]
  401556:	1092      	asrs	r2, r2, #2
  401558:	2101      	movs	r1, #1
  40155a:	fa01 f202 	lsl.w	r2, r1, r2
  40155e:	4313      	orrs	r3, r2
  401560:	607b      	str	r3, [r7, #4]
  401562:	4662      	mov	r2, ip
  401564:	e779      	b.n	40145a <_malloc_r+0x39a>
  401566:	2301      	movs	r3, #1
  401568:	6053      	str	r3, [r2, #4]
  40156a:	e729      	b.n	4013c0 <_malloc_r+0x300>
  40156c:	f240 5254 	movw	r2, #1364	; 0x554
  401570:	4293      	cmp	r3, r2
  401572:	d822      	bhi.n	4015ba <_malloc_r+0x4fa>
  401574:	0cb3      	lsrs	r3, r6, #18
  401576:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40157a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40157e:	00c3      	lsls	r3, r0, #3
  401580:	e5c0      	b.n	401104 <_malloc_r+0x44>
  401582:	f103 0b10 	add.w	fp, r3, #16
  401586:	e6ae      	b.n	4012e6 <_malloc_r+0x226>
  401588:	2a54      	cmp	r2, #84	; 0x54
  40158a:	d829      	bhi.n	4015e0 <_malloc_r+0x520>
  40158c:	0b1a      	lsrs	r2, r3, #12
  40158e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  401592:	00c9      	lsls	r1, r1, #3
  401594:	326e      	adds	r2, #110	; 0x6e
  401596:	e74d      	b.n	401434 <_malloc_r+0x374>
  401598:	4b20      	ldr	r3, [pc, #128]	; (40161c <_malloc_r+0x55c>)
  40159a:	6819      	ldr	r1, [r3, #0]
  40159c:	4459      	add	r1, fp
  40159e:	6019      	str	r1, [r3, #0]
  4015a0:	e6b2      	b.n	401308 <_malloc_r+0x248>
  4015a2:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4015a6:	2800      	cmp	r0, #0
  4015a8:	f47f aeae 	bne.w	401308 <_malloc_r+0x248>
  4015ac:	eb08 030b 	add.w	r3, r8, fp
  4015b0:	68ba      	ldr	r2, [r7, #8]
  4015b2:	f043 0301 	orr.w	r3, r3, #1
  4015b6:	6053      	str	r3, [r2, #4]
  4015b8:	e6ee      	b.n	401398 <_malloc_r+0x2d8>
  4015ba:	207f      	movs	r0, #127	; 0x7f
  4015bc:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4015c0:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4015c4:	e59e      	b.n	401104 <_malloc_r+0x44>
  4015c6:	f104 0108 	add.w	r1, r4, #8
  4015ca:	4628      	mov	r0, r5
  4015cc:	9300      	str	r3, [sp, #0]
  4015ce:	f7ff fc29 	bl	400e24 <_free_r>
  4015d2:	9b00      	ldr	r3, [sp, #0]
  4015d4:	6819      	ldr	r1, [r3, #0]
  4015d6:	e6df      	b.n	401398 <_malloc_r+0x2d8>
  4015d8:	2001      	movs	r0, #1
  4015da:	f04f 0900 	mov.w	r9, #0
  4015de:	e6bc      	b.n	40135a <_malloc_r+0x29a>
  4015e0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4015e4:	d805      	bhi.n	4015f2 <_malloc_r+0x532>
  4015e6:	0bda      	lsrs	r2, r3, #15
  4015e8:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4015ec:	00c9      	lsls	r1, r1, #3
  4015ee:	3277      	adds	r2, #119	; 0x77
  4015f0:	e720      	b.n	401434 <_malloc_r+0x374>
  4015f2:	f240 5154 	movw	r1, #1364	; 0x554
  4015f6:	428a      	cmp	r2, r1
  4015f8:	d805      	bhi.n	401606 <_malloc_r+0x546>
  4015fa:	0c9a      	lsrs	r2, r3, #18
  4015fc:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  401600:	00c9      	lsls	r1, r1, #3
  401602:	327c      	adds	r2, #124	; 0x7c
  401604:	e716      	b.n	401434 <_malloc_r+0x374>
  401606:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40160a:	227e      	movs	r2, #126	; 0x7e
  40160c:	e712      	b.n	401434 <_malloc_r+0x374>
  40160e:	687b      	ldr	r3, [r7, #4]
  401610:	e780      	b.n	401514 <_malloc_r+0x454>
  401612:	08f0      	lsrs	r0, r6, #3
  401614:	f106 0308 	add.w	r3, r6, #8
  401618:	e600      	b.n	40121c <_malloc_r+0x15c>
  40161a:	bf00      	nop
  40161c:	2000086c 	.word	0x2000086c

00401620 <__malloc_lock>:
  401620:	4801      	ldr	r0, [pc, #4]	; (401628 <__malloc_lock+0x8>)
  401622:	f7ff bd13 	b.w	40104c <__retarget_lock_acquire_recursive>
  401626:	bf00      	nop
  401628:	200008bc 	.word	0x200008bc

0040162c <__malloc_unlock>:
  40162c:	4801      	ldr	r0, [pc, #4]	; (401634 <__malloc_unlock+0x8>)
  40162e:	f7ff bd0f 	b.w	401050 <__retarget_lock_release_recursive>
  401632:	bf00      	nop
  401634:	200008bc 	.word	0x200008bc

00401638 <_sbrk_r>:
  401638:	b538      	push	{r3, r4, r5, lr}
  40163a:	4c07      	ldr	r4, [pc, #28]	; (401658 <_sbrk_r+0x20>)
  40163c:	2300      	movs	r3, #0
  40163e:	4605      	mov	r5, r0
  401640:	4608      	mov	r0, r1
  401642:	6023      	str	r3, [r4, #0]
  401644:	f7ff f802 	bl	40064c <_sbrk>
  401648:	1c43      	adds	r3, r0, #1
  40164a:	d000      	beq.n	40164e <_sbrk_r+0x16>
  40164c:	bd38      	pop	{r3, r4, r5, pc}
  40164e:	6823      	ldr	r3, [r4, #0]
  401650:	2b00      	cmp	r3, #0
  401652:	d0fb      	beq.n	40164c <_sbrk_r+0x14>
  401654:	602b      	str	r3, [r5, #0]
  401656:	bd38      	pop	{r3, r4, r5, pc}
  401658:	200008d0 	.word	0x200008d0

0040165c <__sread>:
  40165c:	b510      	push	{r4, lr}
  40165e:	460c      	mov	r4, r1
  401660:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  401664:	f000 f954 	bl	401910 <_read_r>
  401668:	2800      	cmp	r0, #0
  40166a:	db03      	blt.n	401674 <__sread+0x18>
  40166c:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40166e:	4403      	add	r3, r0
  401670:	6523      	str	r3, [r4, #80]	; 0x50
  401672:	bd10      	pop	{r4, pc}
  401674:	89a3      	ldrh	r3, [r4, #12]
  401676:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  40167a:	81a3      	strh	r3, [r4, #12]
  40167c:	bd10      	pop	{r4, pc}
  40167e:	bf00      	nop

00401680 <__swrite>:
  401680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401684:	4616      	mov	r6, r2
  401686:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  40168a:	461f      	mov	r7, r3
  40168c:	05d3      	lsls	r3, r2, #23
  40168e:	460c      	mov	r4, r1
  401690:	4605      	mov	r5, r0
  401692:	d507      	bpl.n	4016a4 <__swrite+0x24>
  401694:	2200      	movs	r2, #0
  401696:	2302      	movs	r3, #2
  401698:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40169c:	f000 f922 	bl	4018e4 <_lseek_r>
  4016a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4016a4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4016a8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  4016ac:	81a2      	strh	r2, [r4, #12]
  4016ae:	463b      	mov	r3, r7
  4016b0:	4632      	mov	r2, r6
  4016b2:	4628      	mov	r0, r5
  4016b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4016b8:	f000 b814 	b.w	4016e4 <_write_r>

004016bc <__sseek>:
  4016bc:	b510      	push	{r4, lr}
  4016be:	460c      	mov	r4, r1
  4016c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4016c4:	f000 f90e 	bl	4018e4 <_lseek_r>
  4016c8:	89a3      	ldrh	r3, [r4, #12]
  4016ca:	1c42      	adds	r2, r0, #1
  4016cc:	bf0e      	itee	eq
  4016ce:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  4016d2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  4016d6:	6520      	strne	r0, [r4, #80]	; 0x50
  4016d8:	81a3      	strh	r3, [r4, #12]
  4016da:	bd10      	pop	{r4, pc}

004016dc <__sclose>:
  4016dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4016e0:	f000 b878 	b.w	4017d4 <_close_r>

004016e4 <_write_r>:
  4016e4:	b570      	push	{r4, r5, r6, lr}
  4016e6:	460d      	mov	r5, r1
  4016e8:	4c08      	ldr	r4, [pc, #32]	; (40170c <_write_r+0x28>)
  4016ea:	4611      	mov	r1, r2
  4016ec:	4606      	mov	r6, r0
  4016ee:	461a      	mov	r2, r3
  4016f0:	4628      	mov	r0, r5
  4016f2:	2300      	movs	r3, #0
  4016f4:	6023      	str	r3, [r4, #0]
  4016f6:	f7fe fd6b 	bl	4001d0 <_write>
  4016fa:	1c43      	adds	r3, r0, #1
  4016fc:	d000      	beq.n	401700 <_write_r+0x1c>
  4016fe:	bd70      	pop	{r4, r5, r6, pc}
  401700:	6823      	ldr	r3, [r4, #0]
  401702:	2b00      	cmp	r3, #0
  401704:	d0fb      	beq.n	4016fe <_write_r+0x1a>
  401706:	6033      	str	r3, [r6, #0]
  401708:	bd70      	pop	{r4, r5, r6, pc}
  40170a:	bf00      	nop
  40170c:	200008d0 	.word	0x200008d0

00401710 <__register_exitproc>:
  401710:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  401714:	4d2c      	ldr	r5, [pc, #176]	; (4017c8 <__register_exitproc+0xb8>)
  401716:	4606      	mov	r6, r0
  401718:	6828      	ldr	r0, [r5, #0]
  40171a:	4698      	mov	r8, r3
  40171c:	460f      	mov	r7, r1
  40171e:	4691      	mov	r9, r2
  401720:	f7ff fc94 	bl	40104c <__retarget_lock_acquire_recursive>
  401724:	4b29      	ldr	r3, [pc, #164]	; (4017cc <__register_exitproc+0xbc>)
  401726:	681c      	ldr	r4, [r3, #0]
  401728:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40172c:	2b00      	cmp	r3, #0
  40172e:	d03e      	beq.n	4017ae <__register_exitproc+0x9e>
  401730:	685a      	ldr	r2, [r3, #4]
  401732:	2a1f      	cmp	r2, #31
  401734:	dc1c      	bgt.n	401770 <__register_exitproc+0x60>
  401736:	f102 0e01 	add.w	lr, r2, #1
  40173a:	b176      	cbz	r6, 40175a <__register_exitproc+0x4a>
  40173c:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  401740:	2401      	movs	r4, #1
  401742:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  401746:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40174a:	4094      	lsls	r4, r2
  40174c:	4320      	orrs	r0, r4
  40174e:	2e02      	cmp	r6, #2
  401750:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  401754:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  401758:	d023      	beq.n	4017a2 <__register_exitproc+0x92>
  40175a:	3202      	adds	r2, #2
  40175c:	f8c3 e004 	str.w	lr, [r3, #4]
  401760:	6828      	ldr	r0, [r5, #0]
  401762:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  401766:	f7ff fc73 	bl	401050 <__retarget_lock_release_recursive>
  40176a:	2000      	movs	r0, #0
  40176c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401770:	4b17      	ldr	r3, [pc, #92]	; (4017d0 <__register_exitproc+0xc0>)
  401772:	b30b      	cbz	r3, 4017b8 <__register_exitproc+0xa8>
  401774:	f44f 70c8 	mov.w	r0, #400	; 0x190
  401778:	f7ff fc9a 	bl	4010b0 <malloc>
  40177c:	4603      	mov	r3, r0
  40177e:	b1d8      	cbz	r0, 4017b8 <__register_exitproc+0xa8>
  401780:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  401784:	6002      	str	r2, [r0, #0]
  401786:	2100      	movs	r1, #0
  401788:	6041      	str	r1, [r0, #4]
  40178a:	460a      	mov	r2, r1
  40178c:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  401790:	f04f 0e01 	mov.w	lr, #1
  401794:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  401798:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  40179c:	2e00      	cmp	r6, #0
  40179e:	d0dc      	beq.n	40175a <__register_exitproc+0x4a>
  4017a0:	e7cc      	b.n	40173c <__register_exitproc+0x2c>
  4017a2:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4017a6:	430c      	orrs	r4, r1
  4017a8:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4017ac:	e7d5      	b.n	40175a <__register_exitproc+0x4a>
  4017ae:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4017b2:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4017b6:	e7bb      	b.n	401730 <__register_exitproc+0x20>
  4017b8:	6828      	ldr	r0, [r5, #0]
  4017ba:	f7ff fc49 	bl	401050 <__retarget_lock_release_recursive>
  4017be:	f04f 30ff 	mov.w	r0, #4294967295
  4017c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4017c6:	bf00      	nop
  4017c8:	20000438 	.word	0x20000438
  4017cc:	00401958 	.word	0x00401958
  4017d0:	004010b1 	.word	0x004010b1

004017d4 <_close_r>:
  4017d4:	b538      	push	{r3, r4, r5, lr}
  4017d6:	4c07      	ldr	r4, [pc, #28]	; (4017f4 <_close_r+0x20>)
  4017d8:	2300      	movs	r3, #0
  4017da:	4605      	mov	r5, r0
  4017dc:	4608      	mov	r0, r1
  4017de:	6023      	str	r3, [r4, #0]
  4017e0:	f7fe ff50 	bl	400684 <_close>
  4017e4:	1c43      	adds	r3, r0, #1
  4017e6:	d000      	beq.n	4017ea <_close_r+0x16>
  4017e8:	bd38      	pop	{r3, r4, r5, pc}
  4017ea:	6823      	ldr	r3, [r4, #0]
  4017ec:	2b00      	cmp	r3, #0
  4017ee:	d0fb      	beq.n	4017e8 <_close_r+0x14>
  4017f0:	602b      	str	r3, [r5, #0]
  4017f2:	bd38      	pop	{r3, r4, r5, pc}
  4017f4:	200008d0 	.word	0x200008d0

004017f8 <_fclose_r>:
  4017f8:	b570      	push	{r4, r5, r6, lr}
  4017fa:	b159      	cbz	r1, 401814 <_fclose_r+0x1c>
  4017fc:	4605      	mov	r5, r0
  4017fe:	460c      	mov	r4, r1
  401800:	b110      	cbz	r0, 401808 <_fclose_r+0x10>
  401802:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401804:	2b00      	cmp	r3, #0
  401806:	d03c      	beq.n	401882 <_fclose_r+0x8a>
  401808:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40180a:	07d8      	lsls	r0, r3, #31
  40180c:	d505      	bpl.n	40181a <_fclose_r+0x22>
  40180e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401812:	b92b      	cbnz	r3, 401820 <_fclose_r+0x28>
  401814:	2600      	movs	r6, #0
  401816:	4630      	mov	r0, r6
  401818:	bd70      	pop	{r4, r5, r6, pc}
  40181a:	89a3      	ldrh	r3, [r4, #12]
  40181c:	0599      	lsls	r1, r3, #22
  40181e:	d53c      	bpl.n	40189a <_fclose_r+0xa2>
  401820:	4621      	mov	r1, r4
  401822:	4628      	mov	r0, r5
  401824:	f7ff f964 	bl	400af0 <__sflush_r>
  401828:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40182a:	4606      	mov	r6, r0
  40182c:	b133      	cbz	r3, 40183c <_fclose_r+0x44>
  40182e:	69e1      	ldr	r1, [r4, #28]
  401830:	4628      	mov	r0, r5
  401832:	4798      	blx	r3
  401834:	2800      	cmp	r0, #0
  401836:	bfb8      	it	lt
  401838:	f04f 36ff 	movlt.w	r6, #4294967295
  40183c:	89a3      	ldrh	r3, [r4, #12]
  40183e:	061a      	lsls	r2, r3, #24
  401840:	d422      	bmi.n	401888 <_fclose_r+0x90>
  401842:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401844:	b141      	cbz	r1, 401858 <_fclose_r+0x60>
  401846:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40184a:	4299      	cmp	r1, r3
  40184c:	d002      	beq.n	401854 <_fclose_r+0x5c>
  40184e:	4628      	mov	r0, r5
  401850:	f7ff fae8 	bl	400e24 <_free_r>
  401854:	2300      	movs	r3, #0
  401856:	6323      	str	r3, [r4, #48]	; 0x30
  401858:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40185a:	b121      	cbz	r1, 401866 <_fclose_r+0x6e>
  40185c:	4628      	mov	r0, r5
  40185e:	f7ff fae1 	bl	400e24 <_free_r>
  401862:	2300      	movs	r3, #0
  401864:	6463      	str	r3, [r4, #68]	; 0x44
  401866:	f7ff fa67 	bl	400d38 <__sfp_lock_acquire>
  40186a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40186c:	2200      	movs	r2, #0
  40186e:	07db      	lsls	r3, r3, #31
  401870:	81a2      	strh	r2, [r4, #12]
  401872:	d50e      	bpl.n	401892 <_fclose_r+0x9a>
  401874:	6da0      	ldr	r0, [r4, #88]	; 0x58
  401876:	f7ff fbe7 	bl	401048 <__retarget_lock_close_recursive>
  40187a:	f7ff fa63 	bl	400d44 <__sfp_lock_release>
  40187e:	4630      	mov	r0, r6
  401880:	bd70      	pop	{r4, r5, r6, pc}
  401882:	f7ff fa2d 	bl	400ce0 <__sinit>
  401886:	e7bf      	b.n	401808 <_fclose_r+0x10>
  401888:	6921      	ldr	r1, [r4, #16]
  40188a:	4628      	mov	r0, r5
  40188c:	f7ff faca 	bl	400e24 <_free_r>
  401890:	e7d7      	b.n	401842 <_fclose_r+0x4a>
  401892:	6da0      	ldr	r0, [r4, #88]	; 0x58
  401894:	f7ff fbdc 	bl	401050 <__retarget_lock_release_recursive>
  401898:	e7ec      	b.n	401874 <_fclose_r+0x7c>
  40189a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40189c:	f7ff fbd6 	bl	40104c <__retarget_lock_acquire_recursive>
  4018a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4018a4:	2b00      	cmp	r3, #0
  4018a6:	d1bb      	bne.n	401820 <_fclose_r+0x28>
  4018a8:	6e66      	ldr	r6, [r4, #100]	; 0x64
  4018aa:	f016 0601 	ands.w	r6, r6, #1
  4018ae:	d1b1      	bne.n	401814 <_fclose_r+0x1c>
  4018b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4018b2:	f7ff fbcd 	bl	401050 <__retarget_lock_release_recursive>
  4018b6:	4630      	mov	r0, r6
  4018b8:	bd70      	pop	{r4, r5, r6, pc}
  4018ba:	bf00      	nop

004018bc <_fstat_r>:
  4018bc:	b538      	push	{r3, r4, r5, lr}
  4018be:	460b      	mov	r3, r1
  4018c0:	4c07      	ldr	r4, [pc, #28]	; (4018e0 <_fstat_r+0x24>)
  4018c2:	4605      	mov	r5, r0
  4018c4:	4611      	mov	r1, r2
  4018c6:	4618      	mov	r0, r3
  4018c8:	2300      	movs	r3, #0
  4018ca:	6023      	str	r3, [r4, #0]
  4018cc:	f7fe fedd 	bl	40068a <_fstat>
  4018d0:	1c43      	adds	r3, r0, #1
  4018d2:	d000      	beq.n	4018d6 <_fstat_r+0x1a>
  4018d4:	bd38      	pop	{r3, r4, r5, pc}
  4018d6:	6823      	ldr	r3, [r4, #0]
  4018d8:	2b00      	cmp	r3, #0
  4018da:	d0fb      	beq.n	4018d4 <_fstat_r+0x18>
  4018dc:	602b      	str	r3, [r5, #0]
  4018de:	bd38      	pop	{r3, r4, r5, pc}
  4018e0:	200008d0 	.word	0x200008d0

004018e4 <_lseek_r>:
  4018e4:	b570      	push	{r4, r5, r6, lr}
  4018e6:	460d      	mov	r5, r1
  4018e8:	4c08      	ldr	r4, [pc, #32]	; (40190c <_lseek_r+0x28>)
  4018ea:	4611      	mov	r1, r2
  4018ec:	4606      	mov	r6, r0
  4018ee:	461a      	mov	r2, r3
  4018f0:	4628      	mov	r0, r5
  4018f2:	2300      	movs	r3, #0
  4018f4:	6023      	str	r3, [r4, #0]
  4018f6:	f7fe fecd 	bl	400694 <_lseek>
  4018fa:	1c43      	adds	r3, r0, #1
  4018fc:	d000      	beq.n	401900 <_lseek_r+0x1c>
  4018fe:	bd70      	pop	{r4, r5, r6, pc}
  401900:	6823      	ldr	r3, [r4, #0]
  401902:	2b00      	cmp	r3, #0
  401904:	d0fb      	beq.n	4018fe <_lseek_r+0x1a>
  401906:	6033      	str	r3, [r6, #0]
  401908:	bd70      	pop	{r4, r5, r6, pc}
  40190a:	bf00      	nop
  40190c:	200008d0 	.word	0x200008d0

00401910 <_read_r>:
  401910:	b570      	push	{r4, r5, r6, lr}
  401912:	460d      	mov	r5, r1
  401914:	4c08      	ldr	r4, [pc, #32]	; (401938 <_read_r+0x28>)
  401916:	4611      	mov	r1, r2
  401918:	4606      	mov	r6, r0
  40191a:	461a      	mov	r2, r3
  40191c:	4628      	mov	r0, r5
  40191e:	2300      	movs	r3, #0
  401920:	6023      	str	r3, [r4, #0]
  401922:	f7fe fc21 	bl	400168 <_read>
  401926:	1c43      	adds	r3, r0, #1
  401928:	d000      	beq.n	40192c <_read_r+0x1c>
  40192a:	bd70      	pop	{r4, r5, r6, pc}
  40192c:	6823      	ldr	r3, [r4, #0]
  40192e:	2b00      	cmp	r3, #0
  401930:	d0fb      	beq.n	40192a <_read_r+0x1a>
  401932:	6033      	str	r3, [r6, #0]
  401934:	bd70      	pop	{r4, r5, r6, pc}
  401936:	bf00      	nop
  401938:	200008d0 	.word	0x200008d0
  40193c:	65707954 	.word	0x65707954
  401940:	27612720 	.word	0x27612720
  401944:	206f7420 	.word	0x206f7420
  401948:	746e6f63 	.word	0x746e6f63
  40194c:	65756e69 	.word	0x65756e69
  401950:	0d2e2e2e 	.word	0x0d2e2e2e
  401954:	0000000a 	.word	0x0000000a

00401958 <_global_impure_ptr>:
  401958:	20000010                                ... 

0040195c <_init>:
  40195c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40195e:	bf00      	nop
  401960:	bcf8      	pop	{r3, r4, r5, r6, r7}
  401962:	bc08      	pop	{r3}
  401964:	469e      	mov	lr, r3
  401966:	4770      	bx	lr

00401968 <__init_array_start>:
  401968:	00400ad1 	.word	0x00400ad1

0040196c <__frame_dummy_init_array_entry>:
  40196c:	00400121                                !.@.

00401970 <_fini>:
  401970:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  401972:	bf00      	nop
  401974:	bcf8      	pop	{r3, r4, r5, r6, r7}
  401976:	bc08      	pop	{r3}
  401978:	469e      	mov	lr, r3
  40197a:	4770      	bx	lr

0040197c <__fini_array_start>:
  40197c:	004000fd 	.word	0x004000fd
